{"version":3,"file":"static/js/313.274eadc3.chunk.js","mappings":"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","sources":["components/alertDialog.js","app/ovoc/ltc/page.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nexport default function AlertDialog({Mode, Head, Warn}) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    const handleClickOpen = () => {\r\n      setOpen(!open);\r\n    };\r\n    if(Mode === \"A\" || Mode === \"R\" || Mode === \"UA\"){\r\n        handleClickOpen();\r\n      }\r\n  }, [Mode]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleNo = () => {\r\n    setOpen(!open);\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={open}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{Head}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {Warn}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Yes</Button>\r\n          <Button onClick={handleNo} autoFocus>\r\n            No\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Dialog,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport axios from \"axios\";\r\nimport JSZip from \"jszip\";\r\nimport Loader from \"../../../components/loader\";\r\nimport AlertDialog from \"../../../components/alertDialog\";\r\n\r\nfunction LTC() {\r\n  const [load, setLoad] = useState(false);\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const ADID = JSON.parse(sessionStorage.getItem(\"userData\")).ADID;\r\n  const currentDay = new Date().getDate();\r\n  const currentMonth = new Date().getMonth() + 1;\r\n  const currentYear = new Date().getFullYear();\r\n  const currentDate = `${currentYear}-${currentMonth}-${currentDay}`;\r\n  const [vendorCodes, setVendorCodes] = useState([]);\r\n  const [vendorSelect, setVendorSelect] = useState(\"\");\r\n  const [vendorName, setVendorName] = useState();\r\n  const [vendorAddress, setVendorAddress] = useState();\r\n  const [vendorEmail, setVendorEmail] = useState();\r\n  const [vendorMobile, setVendorMobile] = useState();\r\n  const [conCategory, setConCategory] = useState();\r\n  const [mode, setMode] = useState(\"N\");\r\n  const [warn, setWarn] = useState();\r\n  const [head, setHead] = useState();\r\n  const [types, setTypes] = useState();\r\n  const [prevTypes, setPrevTypes] = useState();\r\n  const [message, setMessage] = useState(\"don't exist\");\r\n  const [yearsSelect, setYearsSelect] = useState(0);\r\n  const [monthsSelect, setMonthsSelect] = useState(0);\r\n  const implementationDate = new Date(\"2024-03-25\");\r\n  const [ltaAfterImp, setLtaAfterImp] = useState();\r\n  const [prevLtaAfterImp, setPrevLtaAfterImp] = useState();\r\n  const [selectedLtc, setSelectedLtc] = useState();\r\n  const [arcContractDetails, setArcContractDetails] = useState();\r\n  const [scope, setScope] = useState();\r\n  const [intro, setIntro] = useState();\r\n  const [deviationsLabel, setDeviationsLabel] = useState();\r\n  const [prevDeviationsLabel, setPrevDeviationsLabel] = useState();\r\n  const [ltcVersion, setLtcVersion] = useState();\r\n  const [ready, setReady] = useState(false);\r\n  const [chkList, setChkList] = useState([]);\r\n  const [otc, setOtc] = useState(\"\");\r\n  const [osc, setOsc] = useState(\"\");\r\n  const [deviationsFiles, setDeviationsFiles] = useState([]);\r\n  const [disableDeviationsFiles, setDisableDeviationsFiles] = useState(true);\r\n  const [vendorSignedFiles, setVendorSignedFiles] = useState([]);\r\n  const [disableVendorSignedFiles, setDisableVendorSignedFiles] =\r\n    useState(true);\r\n  const [vendorSharedFiles, setVendorSharedFiles] = useState([]);\r\n  const [disableVendorSharedFiles, setDisableVendorSharedFiles] =\r\n    useState(true);\r\n  const [appDet, setAppDet] = useState();\r\n  const [appArcDet, setAppArcDet] = useState();\r\n  const [employeesP, setEmployeesP] = useState([]);\r\n  const [employeesAP, setEmployeesAP] = useState([]);\r\n  const [employeesV, setEmployeesV] = useState([]);\r\n  const [employeesR1, setEmployeesR1] = useState([]);\r\n  const [employeesR2, setEmployeesR2] = useState([]);\r\n  const [employeesA, setEmployeesA] = useState([]);\r\n  const [employeesANd, setEmployeesANd] = useState([]);\r\n  const [approverMat, setApproverMat] = useState({\r\n    proposer: \"\",\r\n    proposerRole: \"\",\r\n    PEmail: \"\",\r\n    addproposer: \"\",\r\n    addproposerRole: \"\",\r\n    APEmail: \"\",\r\n    verifier: \"\",\r\n    verifierRole: \"\",\r\n    VEmail: \"\",\r\n    recommender1: \"\",\r\n    recommender1Role: \"\",\r\n    R1Email: \"\",\r\n    recommender2: \"\",\r\n    recommender2Role: \"\",\r\n    R2Email: \"\",\r\n    approver: \"\",\r\n    approverRole: \"\",\r\n    AEmail: \"\",\r\n  });\r\n  const [sucFlag, setSucFlag] = useState(false);\r\n  const [sucVsFFlag, setSucVsFFlag] = useState();\r\n  const [vsFFlag, setVsFFlag] = useState();\r\n  const [sucVsgFFlag, setSucVsgFFlag] = useState();\r\n  const [vsgFFlag, setVsgFFlag] = useState();\r\n  const [sucDFFlag, setSucDFFlag] = useState();\r\n  const [dFFlag, setDFFlag] = useState();\r\n  const [toastMessage, setToastMessage] = useState();\r\n  const [errors, setErrors] = useState({});\r\n  const [checkChkListFlags, setCheckChkListFlags] = useState(false);\r\n  const toastId = React.useRef(null);\r\n  const [open, setOpen] = useState();\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toString().substring(0, 15);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      setLoad(true);\r\n      try {\r\n        const response = await axios.post(\r\n          `${process.env.REACT_APP_BACKEND_URL}/get/empDet`,\r\n          {\r\n            ADID: ADID,\r\n          }\r\n        );\r\n        setName(response.data.data.USERNAME);\r\n        setEmail(response.data.data.EMAIL);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch User:\", error);\r\n      }\r\n      setLoad(false);\r\n    };\r\n    fetchUser();\r\n  }, [ADID]);\r\n\r\n  useEffect(() => {\r\n    // Function to fetch vendor codes from the backend\r\n    const fetchVendorCodes = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.REACT_APP_BACKEND_URL}/get/vCode`\r\n        );\r\n        setVendorCodes(response.data.data);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch vendor codes:\", error);\r\n      }\r\n    };\r\n    fetchVendorCodes();\r\n  }, []);\r\n  const defaultProps = {\r\n    options: vendorCodes,\r\n    getOptionLabel: (option) => option.INV_VENDOR_CODE,\r\n  };\r\n\r\n  const handleVendorClick = async () => {\r\n    setLoad(true);\r\n    try {\r\n      let vDetailsUrl = process.env.REACT_APP_BACKEND_URL + \"/get/vDetails\";\r\n      const response = await axios.post(vDetailsUrl, {\r\n        vCode: vendorSelect,\r\n      });\r\n      setVendorName(response.data.data[0].INV_NAME);\r\n      setVendorAddress(response.data.data[0].VM_ADDRESS);\r\n      setVendorEmail(response.data.data[0].inv_ven_email);\r\n      setVendorMobile(response.data.data[0].INS_MOBILE_NO);\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(\"Failed to fetch vendor details\");\r\n    }\r\n    setLoad(false);\r\n  };\r\n\r\n  const handleConCategory = (event) => {\r\n    setTypes([]);\r\n    setLtaAfterImp(true);\r\n    setMode(\"N\");\r\n    setDisableDeviationsFiles(true);\r\n    setDisableVendorSharedFiles(true);\r\n    setDisableVendorSignedFiles(true);\r\n    setSelectedLtc();\r\n    setScope();\r\n    setIntro();\r\n    setDeviationsLabel();\r\n    setLtcVersion();\r\n    setReady(false);\r\n    setChkList([]);\r\n    setCheckChkListFlags(false);\r\n    setOtc(\"\");\r\n    setOsc(\"\");\r\n    setDeviationsFiles([]);\r\n    setVendorSharedFiles([]);\r\n    setVendorSignedFiles([]);\r\n    setApproverMat({\r\n      proposer: \"\",\r\n      proposerRole: \"\",\r\n      PEmail: \"\",\r\n      addproposer: \"\",\r\n      addproposerRole: \"\",\r\n      APEmail: \"\",\r\n      verifier: \"\",\r\n      verifierRole: \"\",\r\n      VEmail: \"\",\r\n      recommender1: \"\",\r\n      recommender1Role: \"\",\r\n      R1Email: \"\",\r\n      recommender2: \"\",\r\n      recommender2Role: \"\",\r\n      R2Email: \"\",\r\n      approver: \"\",\r\n      approverRole: \"\",\r\n      AEmail: \"\",\r\n    });\r\n    setAppArcDet();\r\n    setConCategory(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTypes = async () => {\r\n      setLoad(true);\r\n      try {\r\n        let rowsUri = process.env.REACT_APP_BACKEND_URL + \"/get/availContracts\";\r\n        const response = await axios.post(rowsUri, {\r\n          Category: conCategory,\r\n          VCode: vendorSelect,\r\n        });\r\n        if (response.data.data.length > 0) {\r\n          setMessage(\"exist\");\r\n          setTypes(response.data.data);\r\n          setPrevTypes(response.data.data);\r\n        } else if (conCategory === \"Standard\") {\r\n          setMessage(\"don't exist\");\r\n          setTypes([\r\n            {\r\n              checked: false,\r\n              cc_con_sub_cat: \"Supply\",\r\n              cc_flag: 0,\r\n              cc_con_t_years: 0,\r\n              cc_con_t_months: 0,\r\n              cc_con_s_date: null,\r\n              cc_con_e_date: null,\r\n            },\r\n            {\r\n              checked: false,\r\n              cc_con_sub_cat: \"Engg\",\r\n              cc_flag: 0,\r\n              cc_con_t_years: 0,\r\n              cc_con_t_months: 0,\r\n              cc_con_s_date: null,\r\n              cc_con_e_date: null,\r\n            },\r\n            {\r\n              checked: false,\r\n              cc_con_sub_cat: \"Works\",\r\n              cc_flag: 0,\r\n              cc_con_t_years: 0,\r\n              cc_con_t_months: 0,\r\n              cc_con_s_date: null,\r\n              cc_con_e_date: null,\r\n            },\r\n            {\r\n              checked: false,\r\n              cc_con_sub_cat: \"Erec\",\r\n              cc_flag: 0,\r\n              cc_con_t_years: 0,\r\n              cc_con_t_months: 0,\r\n              cc_con_s_date: null,\r\n              cc_con_e_date: null,\r\n            },\r\n            {\r\n              checked: false,\r\n              cc_con_sub_cat: \"Supervision\",\r\n              cc_flag: 0,\r\n              cc_con_t_years: 0,\r\n              cc_con_t_months: 0,\r\n              cc_con_s_date: null,\r\n              cc_con_e_date: null,\r\n            },\r\n            {\r\n              checked: false,\r\n              cc_con_sub_cat: \"PMC\",\r\n              cc_flag: 0,\r\n              cc_con_t_years: 0,\r\n              cc_con_t_months: 0,\r\n              cc_con_s_date: null,\r\n              cc_con_e_date: null,\r\n            },\r\n            {\r\n              checked: false,\r\n              cc_con_sub_cat: \"EPC\",\r\n              cc_flag: 0,\r\n              cc_con_t_years: 0,\r\n              cc_con_t_months: 0,\r\n              cc_con_s_date: null,\r\n              cc_con_e_date: null,\r\n            },\r\n          ]);\r\n        } else if (conCategory === \"Small\") {\r\n          setMessage(\"don't exist\");\r\n          setTypes([\r\n            {\r\n              checked: false,\r\n              cc_con_sub_cat: \"Supply\",\r\n              cc_flag: 0,\r\n              cc_con_t_years: 0,\r\n              cc_con_t_months: 0,\r\n              cc_con_s_date: null,\r\n              cc_con_e_date: null,\r\n            },\r\n            {\r\n              checked: false,\r\n              cc_con_sub_cat: \"Service\",\r\n              cc_flag: 0,\r\n              cc_con_t_years: 0,\r\n              cc_con_t_months: 0,\r\n              cc_con_s_date: null,\r\n              cc_con_e_date: null,\r\n            },\r\n            {\r\n              checked: false,\r\n              cc_con_sub_cat: \"Manpower\",\r\n              cc_flag: 0,\r\n              cc_con_t_years: 0,\r\n              cc_con_t_months: 0,\r\n              cc_con_s_date: null,\r\n              cc_con_e_date: null,\r\n            },\r\n          ]);\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Failed to fetch types\", error);\r\n      }\r\n      setLoad(false);\r\n    };\r\n    fetchTypes();\r\n  }, [conCategory, vendorSelect]);\r\n\r\n  const handleInputChange = (rowIndex, type, value) => {\r\n    const newRows = [...types];\r\n    if (\r\n      type === \"checked\" ||\r\n      type === \"cc_con_t_years\" ||\r\n      type === \"cc_con_t_months\" ||\r\n      type === \"cc_con_s_date\" ||\r\n      type === \"cc_con_e_date\"\r\n    ) {\r\n      newRows[rowIndex][type] = value;\r\n      if (\r\n        newRows[rowIndex].checked == 1 &&\r\n        (newRows[rowIndex].cc_con_t_years > 0 ||\r\n          newRows[rowIndex].cc_con_t_months > 0) &&\r\n        newRows[rowIndex].cc_con_s_date !== \"null\" &&\r\n        newRows[rowIndex].cc_con_s_date !== null &&\r\n        newRows[rowIndex].cc_con_s_date !== \"\" &&\r\n        newRows[rowIndex].cc_con_e_date !== \"null\" &&\r\n        newRows[rowIndex].cc_con_e_date !== null &&\r\n        newRows[rowIndex].cc_con_e_date !== \"\"\r\n      ) {\r\n        newRows[rowIndex][\"cc_flag\"] = 1;\r\n      } else {\r\n        newRows[rowIndex][\"cc_flag\"] = 0;\r\n        if (newRows[rowIndex].checked == 0) {\r\n          newRows[rowIndex][\"cc_con_t_years\"] = 0;\r\n          newRows[rowIndex][\"cc_con_t_months\"] = 0;\r\n          newRows[rowIndex][\"cc_con_s_date\"] = null;\r\n          newRows[rowIndex][\"cc_con_e_date\"] = null;\r\n        }\r\n      }\r\n    }\r\n    setTypes(newRows);\r\n  };\r\n\r\n  const handleDates = async (index, sDate, years, months) => {\r\n    handleInputChange(index, \"cc_con_s_date\", sDate);\r\n    let date = typeof sDate === \"string\" ? new Date(sDate) : sDate;\r\n    for (var obj of types) {\r\n      if (obj.cc_con_s_date != null) {\r\n        let dateObj = new Date(obj?.cc_con_s_date);\r\n        if (dateObj < implementationDate) {\r\n          setLtaAfterImp(false);\r\n          // setHead(\"LTC prior implementation\");\r\n          // setWarn(`LTC will be executed prior to implementation date and approval matrix captured will reduce to 3 level.\r\n\r\n          // Do you wish to proceed?`);\r\n          break;\r\n        }\r\n        if (dateObj >= implementationDate) {\r\n          setLtaAfterImp(true);\r\n        }\r\n      }\r\n    }\r\n    // Add the years and months to the date\r\n    date.setFullYear(date.getFullYear() + years);\r\n    date.setMonth(date.getMonth() + months);\r\n    let eDate = date.toISOString().split(\"T\")[0]; // Return the end date in ISO format (YYYY-MM-DD)\r\n    handleInputChange(index, \"cc_con_e_date\", eDate);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updateChildParams = async () => {\r\n      setLoad(true);\r\n      if (types[0]?.con_status === 1) {\r\n        setMode(\"R\");\r\n        setDisableDeviationsFiles(true);\r\n        setDisableVendorSharedFiles(true);\r\n        setDisableVendorSignedFiles(true);\r\n        setHead(\"Returned LTC\");\r\n        setWarn(`\r\n        LTC against vendor already exist under selected category and is returned by one of approvers.\r\n        \r\n        Do you wish to edit?`);\r\n      } else if (types[0]?.con_status === 2) {\r\n        setMode(\"A\");\r\n        setDisableDeviationsFiles(true);\r\n        setDisableVendorSharedFiles(true);\r\n        setDisableVendorSignedFiles(true);\r\n        setHead(\"Change in Existing LTC?\");\r\n        setWarn(`\r\n        This action will overwrite existing LTC Form initiated by ${types[0]?.con_modify_by} for the vendor partner. Please submit LTC Form for all prevalent long term agreements with the vendor partner along with the date of their respective validity.\r\n        \r\n        Do you wish to proceed?`);\r\n      } else if (types[0]?.con_status === 0) {\r\n        setMode(\"UA\");\r\n        setDisableDeviationsFiles(true);\r\n        setDisableVendorSharedFiles(true);\r\n        setDisableVendorSignedFiles(true);\r\n        setHead(\"LTC under approval\");\r\n        setWarn(`\r\n        LTC against vendor already exist under selected category and is under approval. Initiated by ${types[0]?.con_modify_by}.\r\n        \r\n        Click \"No\" to move back.`);\r\n      } else {\r\n        setMode(\"N\");\r\n        setDisableDeviationsFiles(true);\r\n        setDisableVendorSharedFiles(true);\r\n        setDisableVendorSignedFiles(true);\r\n      }\r\n      const fetchArcContract = async () => {\r\n        try {\r\n          const responseArcConDet = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/get/arcContractDetails`,\r\n            {\r\n              ContractId: types[0]?.cc_con_id,\r\n            }\r\n          );\r\n          if (responseArcConDet?.length > 0) {\r\n            setArcContractDetails(responseArcConDet.data.data);\r\n          }\r\n        } catch (error) {\r\n          console.log(\"No previous details found to approve\", error);\r\n        }\r\n      };\r\n      fetchArcContract();\r\n      setLoad(false);\r\n    };\r\n\r\n    if (types?.length > 0) {\r\n      if (message === \"exist\") {\r\n        updateChildParams();\r\n        setSelectedLtc(types[0]?.cc_con_id);\r\n        setLtaAfterImp(types[0]?.con_ltaAfImp);\r\n        setPrevLtaAfterImp(types[0]?.con_ltaAfImp);\r\n        setLtcVersion(types[0]?.con_version);\r\n        setDeviationsLabel(types[0]?.con_l_dev_flag);\r\n        setPrevDeviationsLabel(types[0]?.con_l_dev_flag);\r\n        setIntro(types[0]?.con_intro);\r\n        setScope(types[0]?.con_scope);\r\n        setOtc(types[0]?.con_otc);\r\n        setOsc(types[0]?.con_osc);\r\n      } else {\r\n        setMode(\"N\");\r\n        setDisableDeviationsFiles(true);\r\n        setDisableVendorSharedFiles(true);\r\n        setDisableVendorSignedFiles(true);\r\n        setSelectedLtc();\r\n        setLtcVersion();\r\n        setDeviationsLabel();\r\n        setIntro();\r\n        setScope();\r\n        setOtc(\"\");\r\n        setOsc(\"\");\r\n        return;\r\n      }\r\n    }\r\n  }, [message]);\r\n\r\n  useEffect(() => {\r\n    const assignReady = () => {\r\n      for (const obj of types) {\r\n        if (obj.cc_flag == 1 || obj.cc_flag == true) {\r\n          setReady(true);\r\n          break;\r\n        } else {\r\n          setReady(false);\r\n        }\r\n      }\r\n    };\r\n    if (types?.length > 0) {\r\n      assignReady();\r\n    }\r\n  }, [types]);\r\n\r\n  function autoResize(event) {\r\n    event.target.style.height = \"auto\";\r\n    event.target.style.height = event.target.scrollHeight + \"px\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchChkList = async () => {\r\n      setLoad(true);\r\n      try {\r\n        let rowsUri = process.env.REACT_APP_BACKEND_URL + \"/get/rows\";\r\n        const response = await axios.post(rowsUri, {\r\n          Category: conCategory,\r\n          ConId:\r\n            selectedLtc !== undefined &&\r\n            mode == \"A\" &&\r\n            deviationsLabel == prevDeviationsLabel\r\n              ? selectedLtc\r\n              : selectedLtc !== undefined &&\r\n                mode == \"R\" &&\r\n                deviationsLabel == prevDeviationsLabel\r\n              ? selectedLtc\r\n              : 0,\r\n        });\r\n        setChkList(response.data.data);\r\n      } catch (error) {\r\n        console.log(\"Failed to fetch rows\", error);\r\n      }\r\n      setLoad(false);\r\n    };\r\n    fetchChkList();\r\n  }, [conCategory, selectedLtc, deviationsLabel]);\r\n\r\n  const handleChkInputChange = (rowIndex, type, value) => {\r\n    const newRows = [...chkList];\r\n    if (type === \"document\" || type === \"flag\" || type === \"remarks\") {\r\n      newRows[rowIndex][type] = value;\r\n    }\r\n    setChkList(newRows);\r\n  };\r\n\r\n  const checkForChildRow = (rowIndex) => {\r\n    if (\r\n      rowIndex + 1 < chkList.length &&\r\n      chkList[rowIndex].lv1 === chkList[rowIndex + 1].lv1\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAppDet = async () => {\r\n      try {\r\n        const responseAppDet = await axios.post(\r\n          `${process.env.REACT_APP_BACKEND_URL}/get/contractApprovers`,\r\n          {\r\n            ContractId: selectedLtc !== undefined ? selectedLtc : 0,\r\n          }\r\n        );\r\n        if (responseAppDet) {\r\n          setAppDet(responseAppDet.data.data);\r\n        }\r\n      } catch (error) {\r\n        console.log(\"No details found to approve\", error);\r\n      }\r\n    };\r\n    const fetchAppArcDet = async () => {\r\n      try {\r\n        const responseAppDet = await axios.post(\r\n          `${process.env.REACT_APP_BACKEND_URL}/get/contractApproversA`,\r\n          {\r\n            ContractId: selectedLtc !== undefined ? selectedLtc : 0,\r\n          }\r\n        );\r\n        if (responseAppDet) {\r\n          setAppArcDet(responseAppDet.data.data);\r\n          //console.log(responseAppDet.data.data);\r\n        }\r\n      } catch (error) {\r\n        console.log(\"No details found to approve\", error);\r\n      }\r\n    };\r\n    if (selectedLtc !== undefined && mode === \"R\") {\r\n      setLoad(true);\r\n      fetchAppDet();\r\n      fetchAppArcDet();\r\n      setLoad(false);\r\n    }\r\n  }, [selectedLtc, mode]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      deviationsLabel === prevDeviationsLabel &&\r\n      ltaAfterImp === prevLtaAfterImp\r\n    ) {\r\n      appDet?.forEach((obj) => {\r\n        if (obj.cam_role === \"Proposer\") {\r\n          setApproverMat((prevState) => ({\r\n            ...prevState,\r\n            proposer: obj.cam_approver,\r\n            proposerRole: obj.cam_app_role,\r\n            PEmail: obj.cam_app_email,\r\n          }));\r\n        }\r\n        if (obj.cam_role === \"Additional Proposer\") {\r\n          setApproverMat((prevState) => ({\r\n            ...prevState,\r\n            addproposer: obj.cam_approver,\r\n            addproposerRole: obj.cam_app_role,\r\n            APEmail: obj.cam_app_email,\r\n          }));\r\n        }\r\n        if (obj.cam_role === \"Verifier\") {\r\n          setApproverMat((prevState) => ({\r\n            ...prevState,\r\n            verifier: obj.cam_approver,\r\n            verifierRole: obj.cam_app_role,\r\n            VEmail: obj.cam_app_email,\r\n          }));\r\n        }\r\n        if (obj.cam_role === \"Recommender #1\") {\r\n          setApproverMat((prevState) => ({\r\n            ...prevState,\r\n            recommender1: obj.cam_approver,\r\n            recommender1Role: obj.cam_app_role,\r\n            R1Email: obj.cam_app_email,\r\n          }));\r\n        }\r\n        if (obj.cam_role === \"Recommender #2\") {\r\n          setApproverMat((prevState) => ({\r\n            ...prevState,\r\n            recommender2: obj.cam_approver,\r\n            recommender2Role: obj.cam_app_role,\r\n            R2Email: obj.cam_app_email,\r\n          }));\r\n        }\r\n        if (obj.cam_role === \"Approver\") {\r\n          setApproverMat((prevState) => ({\r\n            ...prevState,\r\n            approver: obj.cam_approver,\r\n            approverRole: obj.cam_app_role,\r\n            AEmail: obj.cam_app_email,\r\n          }));\r\n        }\r\n      });\r\n    } else {\r\n      appDet?.forEach((obj) => {\r\n        if (obj.cam_role === \"Proposer\") {\r\n          setApproverMat((prevState) => ({\r\n            ...prevState,\r\n            proposer: \"\",\r\n            proposerRole: \"\",\r\n            PEmail: \"\",\r\n          }));\r\n        }\r\n        if (obj.cam_role === \"Additional Proposer\") {\r\n          setApproverMat((prevState) => ({\r\n            ...prevState,\r\n            addproposer: \"\",\r\n            addproposerRole: \"\",\r\n            APEmail: \"\",\r\n          }));\r\n        }\r\n        if (obj.cam_role === \"Verifier\") {\r\n          setApproverMat((prevState) => ({\r\n            ...prevState,\r\n            verifier: \"\",\r\n            verifierRole: \"\",\r\n            VEmail: \"\",\r\n          }));\r\n        }\r\n        if (obj.cam_role === \"Recommender #1\") {\r\n          setApproverMat((prevState) => ({\r\n            ...prevState,\r\n            recommender1: \"\",\r\n            recommender1Role: \"\",\r\n            R1Email: \"\",\r\n          }));\r\n        }\r\n        if (obj.cam_role === \"Recommender #2\") {\r\n          setApproverMat((prevState) => ({\r\n            ...prevState,\r\n            recommender2: \"\",\r\n            recommender2Role: \"\",\r\n            R2Email: \"\",\r\n          }));\r\n        }\r\n        if (obj.cam_role === \"Approver\") {\r\n          setApproverMat((prevState) => ({\r\n            ...prevState,\r\n            approver: \"\",\r\n            approverRole: \"\",\r\n            AEmail: \"\",\r\n          }));\r\n        }\r\n      });\r\n    }\r\n  }, [appDet, deviationsLabel, ltaAfterImp]);\r\n\r\n  useEffect(() => {\r\n    const fetchEmployeesP = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.REACT_APP_BACKEND_URL}/get/empAll`\r\n        );\r\n        setEmployeesP(response.data.data);\r\n      } catch (error) {\r\n        console.log(\"Contract id can't be generated\", error);\r\n      }\r\n    };\r\n    // const fetchEmployeesAP = async () => {\r\n    //   try {\r\n    //     const response = await axios.post(\r\n    //       `${process.env.REACT_APP_BACKEND_URL}/get/empAllLv`,\r\n    //       {\r\n    //         level1: 3,\r\n    //         level2: 0,\r\n    //       }\r\n    //     );\r\n    //     setEmployeesAP(response.data.data);\r\n    //   } catch (error) {\r\n    //     console.log(\"Contract id can't be generated\", error);\r\n    //   }\r\n    // };\r\n    const fetchEmployeesV = async () => {\r\n      try {\r\n        const response = await axios.post(\r\n          `${process.env.REACT_APP_BACKEND_URL}/get/empCon`,\r\n          {\r\n            level1: 3,\r\n            level2: 4,\r\n          }\r\n        );\r\n        setEmployeesV(response.data.data);\r\n      } catch (error) {\r\n        console.log(\"Contract id can't be generated\", error);\r\n      }\r\n    };\r\n    const fetchEmployeesR1 = async () => {\r\n      try {\r\n        const response = await axios.post(\r\n          `${process.env.REACT_APP_BACKEND_URL}/get/empCom`,\r\n          {\r\n            level1: 2,\r\n            level2: 3,\r\n          }\r\n        );\r\n        setEmployeesR1(response.data.data);\r\n      } catch (error) {\r\n        console.log(\"Contract id can't be generated\", error);\r\n      }\r\n    };\r\n    const fetchEmployeesR2 = async () => {\r\n      try {\r\n        const response = await axios.post(\r\n          `${process.env.REACT_APP_BACKEND_URL}/get/empCon`,\r\n          {\r\n            level1: 1,\r\n            level2: 2,\r\n          }\r\n        );\r\n        setEmployeesR2(response.data.data);\r\n      } catch (error) {\r\n        console.log(\"Contract id can't be generated\", error);\r\n      }\r\n    };\r\n    const fetchEmployeesA = async () => {\r\n      try {\r\n        const response = await axios.post(\r\n          `${process.env.REACT_APP_BACKEND_URL}/get/empCom`,\r\n          {\r\n            level1: 1,\r\n            level2: 2,\r\n          }\r\n        );\r\n        setEmployeesA(response.data.data);\r\n      } catch (error) {\r\n        console.log(\"Contract id can't be generated\", error);\r\n      }\r\n    };\r\n    const fetchEmployeesANd = async () => {\r\n      try {\r\n        const response = await axios.post(\r\n          `${process.env.REACT_APP_BACKEND_URL}/get/empCom`,\r\n          {\r\n            level1: 3,\r\n            level2: 0,\r\n          }\r\n        );\r\n        setEmployeesAP(response.data.data);\r\n        setEmployeesANd(response.data.data);\r\n      } catch (error) {\r\n        console.log(\"Contract id can't be generated\", error);\r\n      }\r\n    };\r\n    if (mode === \"A\" || mode === \"N\") {\r\n      setLoad(true);\r\n      fetchEmployeesP();\r\n      //fetchEmployeesAP();\r\n      fetchEmployeesV();\r\n      fetchEmployeesR1();\r\n      fetchEmployeesR2();\r\n      fetchEmployeesA();\r\n      fetchEmployeesANd();\r\n      setLoad(false);\r\n    }\r\n  }, [mode]);\r\n  const defaultEmployeesP = {\r\n    options: employeesP,\r\n    getOptionLabel: (option) => option.EMPLOYEE,\r\n  };\r\n  const defaultEmployeesAP = {\r\n    options: employeesAP,\r\n    getOptionLabel: (option) => option.EMPLOYEE,\r\n  };\r\n  const defaultEmployeesV = {\r\n    options: employeesV,\r\n    getOptionLabel: (option) => option.EMPLOYEE,\r\n  };\r\n  const defaultEmployeesR1 = {\r\n    options: employeesR1,\r\n    getOptionLabel: (option) => option.EMPLOYEE,\r\n  };\r\n  const defaultEmployeesR2 = {\r\n    options: employeesR2,\r\n    getOptionLabel: (option) => option.EMPLOYEE,\r\n  };\r\n  const defaultEmployeesA = {\r\n    options: employeesA,\r\n    getOptionLabel: (option) => option.EMPLOYEE,\r\n  };\r\n  const defaultEmployeesANd = {\r\n    options: employeesANd,\r\n    getOptionLabel: (option) => option.EMPLOYEE,\r\n  };\r\n\r\n  const handleApprovalMat = async (type, value, role, mail) => {\r\n    if (\r\n      type === \"proposer\" ||\r\n      type === \"addproposer\" ||\r\n      type === \"verifier\" ||\r\n      type === \"recommender1\" ||\r\n      type === \"recommender2\" ||\r\n      type === \"approver\"\r\n    ) {\r\n      await setApproverMat((prevState) => ({\r\n        ...prevState,\r\n        [type]: value,\r\n      }));\r\n    }\r\n    if (type === \"proposer\") {\r\n      setApproverMat((prevState) => ({\r\n        ...prevState,\r\n        proposerRole: role,\r\n        PEmail: mail,\r\n      }));\r\n    }\r\n    if (type === \"addproposer\") {\r\n      setApproverMat((prevState) => ({\r\n        ...prevState,\r\n        addproposerRole: role,\r\n        APEmail: mail,\r\n      }));\r\n    }\r\n    if (type === \"verifier\") {\r\n      setApproverMat((prevState) => ({\r\n        ...prevState,\r\n        verifierRole: role,\r\n        VEmail: mail,\r\n      }));\r\n    }\r\n    if (type === \"recommender1\") {\r\n      setApproverMat((prevState) => ({\r\n        ...prevState,\r\n        recommender1Role: role,\r\n        R1Email: mail,\r\n      }));\r\n    }\r\n    if (type === \"recommender2\") {\r\n      setApproverMat((prevState) => ({\r\n        ...prevState,\r\n        recommender2Role: role,\r\n        R2Email: mail,\r\n      }));\r\n    }\r\n    if (type === \"approver\") {\r\n      setApproverMat((prevState) => ({\r\n        ...prevState,\r\n        approverRole: role,\r\n        AEmail: mail,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleVendorSharedFilesChange = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    const docxFiles = files.filter(\r\n      (file) =>\r\n        file.type ===\r\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n    );\r\n    if (docxFiles.length !== files.length) {\r\n      console.log(\"Only docx files are allowed!\");\r\n      toast.error(\"Only docx files are allowed\");\r\n      event.target.value(null);\r\n    } else {\r\n      setVendorSharedFiles(docxFiles);\r\n    }\r\n  };\r\n\r\n  const handleVendorSignedFilesChange = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    const pdfFiles = files.filter((file) => file.type === \"application/pdf\");\r\n    if (pdfFiles.length !== files.length) {\r\n      console.log(\"Only pdf files are allowed!\");\r\n      toast.error(\"Only pdf files are allowed\");\r\n      event.target.value(null);\r\n    } else {\r\n      setVendorSignedFiles(pdfFiles);\r\n    }\r\n  };\r\n\r\n  const handleDeviationsFileChange = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    const pdfFiles = files.filter((file) => file.type === \"application/pdf\");\r\n    if (pdfFiles.length !== files.length && files.length === 1) {\r\n      console.log(\"Only one pdf file are allowed!\");\r\n      toast.error(\"Only one pdf file are allowed\");\r\n      event.target.value(null);\r\n    } else {\r\n      setDeviationsFiles(pdfFiles);\r\n    }\r\n  };\r\n\r\n  const zipFiles = async (files) => {\r\n    const zip = new JSZip();\r\n    Array.from(files).forEach((file, index) => {\r\n      zip.file(file.name, file);\r\n    });\r\n    const content = await zip.generateAsync({ type: \"blob\" });\r\n    return content;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setOpen(false);\r\n    let tempErrors = {};\r\n    let k = 0;\r\n    if (intro == undefined || intro == \"\") {\r\n      tempErrors[\"intro\"] = \"Introduction is required\";\r\n    }\r\n    if (scope == undefined || scope == \"\") {\r\n      tempErrors[\"scope\"] = \"Scope is required\";\r\n    }\r\n    setCheckChkListFlags(true);\r\n    for (var obj of chkList) {\r\n      let sl = obj.cl_sl;\r\n      if (intro == undefined || intro == \"\") {\r\n        toast.error(\"Missing mandatory field\");\r\n        k = 1;\r\n        break;\r\n      } else if (scope == undefined || scope == \"\") {\r\n        toast.error(\"Missing mandatory field\");\r\n        k = 1;\r\n        break;\r\n      } else if (\r\n        deviationsLabel == \"Y\" &&\r\n        ((obj.lv2 != \"null\" && obj.lv2 != null) ||\r\n          ((obj.lv2 == \"null\" || obj.lv2 == null) &&\r\n            checkForChildRow(chkList.findIndex((obj) => obj.cl_sl === sl)) ===\r\n              false)) &&\r\n        (obj.flag == undefined || obj.flag == \"\" || obj.flag == null)\r\n      ) {\r\n        toast.error(\"Missing mandatory field\");\r\n        k = 1;\r\n        break;\r\n      } else if (\r\n        deviationsLabel == \"N\" &&\r\n        obj.edit &&\r\n        ((obj.lv2 != \"null\" && obj.lv2 != null) ||\r\n          ((obj.lv2 == \"null\" || obj.lv2 == null) &&\r\n            checkForChildRow(chkList.findIndex((obj) => obj.cl_sl === sl)) ===\r\n              false)) &&\r\n        (obj.flag == undefined || obj.flag == \"\" || obj.flag == null)\r\n      ) {\r\n        toast.error(\"Missing mandatory field\");\r\n        k = 1;\r\n        break;\r\n      } else if (\r\n        deviationsLabel == \"Y\" &&\r\n        obj.flag == \"N\" &&\r\n        ((obj.lv2 != \"null\" && obj.lv2 != null) ||\r\n          ((obj.lv2 == \"null\" || obj.lv2 == null) &&\r\n            checkForChildRow(chkList.findIndex((obj) => obj.cl_sl === sl)) ===\r\n              false)) &&\r\n        (obj.remarks == \"null\" ||\r\n          obj.remarks == null ||\r\n          obj.remarks == undefined ||\r\n          obj.remarks == \"\")\r\n      ) {\r\n        toast.error(\"Missing mandatory field\");\r\n        k = 1;\r\n        break;\r\n      } else if (\r\n        deviationsLabel == \"N\" &&\r\n        obj.edit &&\r\n        obj.flag == \"N\" &&\r\n        ((obj.lv2 != \"null\" && obj.lv2 != null) ||\r\n          ((obj.lv2 == \"null\" || obj.lv2 == null) &&\r\n            checkForChildRow(chkList.findIndex((obj) => obj.cl_sl === sl)) ===\r\n              false)) &&\r\n        (obj.remarks == \"null\" ||\r\n          obj.remarks == null ||\r\n          obj.remarks == undefined ||\r\n          obj.remarks == \"\")\r\n      ) {\r\n        toast.error(\"Missing mandatory field\");\r\n        k = 1;\r\n        break;\r\n      } else {\r\n        k = 0;\r\n      }\r\n    }\r\n    if (k === 1) {\r\n      setErrors(tempErrors);\r\n      return;\r\n    } else if (ready == false) {\r\n      toast.error(\"Missing mandatory type\");\r\n      return;\r\n    } else {\r\n      let uploadFlag =\r\n        vendorSharedFiles.length !== 0 &&\r\n        vendorSignedFiles.length !== 0 &&\r\n        deviationsFiles.length !== 0;\r\n      if (\r\n        (mode !== \"R\" && uploadFlag == false) ||\r\n        (mode === \"R\" &&\r\n          disableVendorSharedFiles == false &&\r\n          vendorSharedFiles.length === 0) ||\r\n        (mode === \"R\" &&\r\n          disableVendorSignedFiles == false &&\r\n          vendorSignedFiles.length === 0) ||\r\n        (mode === \"R\" &&\r\n          disableDeviationsFiles == false &&\r\n          deviationsFiles.length === 0)\r\n      ) {\r\n        toast.error(\"Attachments missing!\");\r\n        return;\r\n      } else if (\r\n        deviationsLabel === \"N\" &&\r\n        (approverMat.proposer == \"\" ||\r\n          approverMat.proposer == undefined ||\r\n          approverMat.approver == \"\" ||\r\n          approverMat.approver == undefined)\r\n      ) {\r\n        toast.error(\"Approval matrix incomplete!\");\r\n        return;\r\n      } else if (\r\n        deviationsLabel === \"Y\" &&\r\n        ltaAfterImp &&\r\n        (approverMat.proposer == \"\" ||\r\n          approverMat.proposer == undefined ||\r\n          approverMat.verifier == \"\" ||\r\n          approverMat.verifier == undefined ||\r\n          approverMat.recommender1 == \"\" ||\r\n          approverMat.recommender1 == undefined ||\r\n          approverMat.recommender2 == \"\" ||\r\n          approverMat.recommender2 == undefined ||\r\n          approverMat.approver == \"\" ||\r\n          approverMat.approver == undefined)\r\n      ) {\r\n        toast.error(\"Approval matrix incomplete!\");\r\n        return;\r\n      } else if (\r\n        deviationsLabel === \"Y\" &&\r\n        ltaAfterImp == false &&\r\n        (approverMat.proposer == \"\" ||\r\n          approverMat.proposer == undefined ||\r\n          approverMat.verifier == \"\" ||\r\n          approverMat.verifier == undefined ||\r\n          approverMat.approver == \"\" ||\r\n          approverMat.approver == undefined)\r\n      ) {\r\n        toast.error(\"Approval matrix incomplete!\");\r\n        return;\r\n      } else {\r\n        setLoad(true);\r\n        setCheckChkListFlags(false);\r\n        try {\r\n          let createCrUri = process.env.REACT_APP_BACKEND_URL + \"/put/createCr\";\r\n          let editCrUri = process.env.REACT_APP_BACKEND_URL + \"/put/editRCr\";\r\n          let usedBy = `${ADID}|${name}`.substring(0, 20);\r\n          if (mode === \"N\") {\r\n            const response = await axios.post(createCrUri, {\r\n              Category: conCategory,\r\n              SubCategory: types,\r\n              CreateDate: currentDate,\r\n              Intro: intro,\r\n              Scope: scope,\r\n              CreateBy: usedBy,\r\n              CreateEmail: email,\r\n              VendorCode: vendorSelect,\r\n              Version: 1,\r\n              Deviation: deviationsLabel,\r\n              LtaAfterImp: ltaAfterImp ? 1 : 0,\r\n              Otc: otc,\r\n              Osc: osc,\r\n              Rows: chkList,\r\n              lv: 1,\r\n              Approvers: approverMat,\r\n            });\r\n            console.log(response.data.message);\r\n            setToastMessage(response.data.message);\r\n            setSelectedLtc(response.data.data.NewContractId);\r\n            setSucFlag(true);\r\n          }\r\n          if (mode === \"A\" || mode === \"R\") {\r\n            console.log(\"hello\");\r\n            const response = await axios.post(editCrUri, {\r\n              ContractId: selectedLtc,\r\n              Category: conCategory,\r\n              SubCategory: types,\r\n              ModifyDate: currentDate,\r\n              ModifyBy: usedBy,\r\n              ModifyEmail: email,\r\n              Intro: intro,\r\n              Scope: scope,\r\n              VendorCode: vendorSelect,\r\n              Ver: ltcVersion + 1,\r\n              mode: mode,\r\n              Deviation: deviationsLabel,\r\n              LtaAfterImp: ltaAfterImp ? 1 : 0,\r\n              Otc: otc,\r\n              Osc: osc,\r\n              Rows: chkList,\r\n              lv: 1,\r\n              Approvers: approverMat,\r\n            });\r\n            console.log(response.data.message);\r\n            setToastMessage(response.data.message);\r\n            setSucFlag(true);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          if (mode === \"N\") {\r\n            toast.error(\"LTC Failed from server, mandatory field missing!\");\r\n          }\r\n          if (mode === \"A\" || mode === \"R\") {\r\n            toast.error(\"Modification in LTC failed from server!\");\r\n          }\r\n          setLoad(false);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoad(true);\r\n    const uploadAttachments = async () => {\r\n      const zipVsFiles = await zipFiles(vendorSharedFiles);\r\n      const zipVsgFiles = await zipFiles(vendorSignedFiles);\r\n      const zipDFile = await zipFiles(deviationsFiles);\r\n\r\n      if (vendorSharedFiles.length !== 0) {\r\n        const readerVsF = new FileReader();\r\n        readerVsF.readAsDataURL(zipVsFiles);\r\n        readerVsF.onload = async () => {\r\n          const base64VsFile = readerVsF.result.split(\",\")[1];\r\n          try {\r\n            const responseVs = await axios.post(\r\n              `${process.env.REACT_APP_BACKEND_URL}/attachments/uploadAttachments`,\r\n              {\r\n                VendorCode: vendorSelect,\r\n                Version: mode === \"N\" ? 1 : ltcVersion + 1,\r\n                uid: selectedLtc,\r\n                file: base64VsFile,\r\n                fileName: \"Vendor Shared.zip\",\r\n              }\r\n            );\r\n            if (responseVs.status == 200) {\r\n              console.log(responseVs.data.message);\r\n              setSucVsFFlag(true);\r\n            } else {\r\n              setVsFFlag(\"fail\");\r\n              setSucVsFFlag(false);\r\n              console.log(responseVs.data.message);\r\n            }\r\n          } catch (error) {\r\n            setVsFFlag(\"fail\");\r\n            setSucVsFFlag(false);\r\n            console.log(\"Error uploading file\", error.message);\r\n          }\r\n        };\r\n      }\r\n      if (vendorSharedFiles.length === 0 && mode === \"R\") {\r\n        setSucVsFFlag(true);\r\n      }\r\n\r\n      if (vendorSignedFiles.length !== 0) {\r\n        const readerVsgF = new FileReader();\r\n        readerVsgF.readAsDataURL(zipVsgFiles);\r\n        readerVsgF.onload = async () => {\r\n          const base64VsgFile = readerVsgF.result.split(\",\")[1];\r\n          try {\r\n            const responseVsg = await axios.post(\r\n              `${process.env.REACT_APP_BACKEND_URL}/attachments/uploadAttachments`,\r\n              {\r\n                VendorCode: vendorSelect,\r\n                Version: mode === \"N\" ? 1 : ltcVersion + 1,\r\n                uid: selectedLtc,\r\n                file: base64VsgFile,\r\n                fileName: \"Vendor Signed.zip\",\r\n              }\r\n            );\r\n            if (responseVsg.status == 200) {\r\n              console.log(responseVsg.data.message);\r\n              setSucVsgFFlag(true);\r\n            } else {\r\n              setVsgFFlag(\"fail\");\r\n              setSucVsgFFlag(false);\r\n              console.log(responseVsg.data.message);\r\n            }\r\n          } catch (error) {\r\n            setVsgFFlag(\"fail\");\r\n            setSucVsgFFlag(false);\r\n            console.log(\"Error uploading file\", error.message);\r\n          }\r\n        };\r\n      }\r\n      if (vendorSignedFiles.length === 0 && mode === \"R\") {\r\n        setSucVsgFFlag(true);\r\n      }\r\n\r\n      if (deviationsFiles.length !== 0) {\r\n        const readerDF = new FileReader();\r\n        readerDF.readAsDataURL(zipDFile);\r\n        readerDF.onload = async () => {\r\n          const base64DFile = readerDF.result.split(\",\")[1];\r\n          try {\r\n            const responseDf = await axios.post(\r\n              `${process.env.REACT_APP_BACKEND_URL}/attachments/uploadAttachments`,\r\n              {\r\n                VendorCode: vendorSelect,\r\n                Version: mode === \"N\" ? 1 : ltcVersion + 1,\r\n                uid: selectedLtc,\r\n                file: base64DFile,\r\n                fileName: \"Final Deviations List.zip\",\r\n              }\r\n            );\r\n            if (responseDf.status == 200) {\r\n              console.log(responseDf.data.message);\r\n              setSucDFFlag(true);\r\n            } else {\r\n              setDFFlag(\"fail\");\r\n              setSucDFFlag(false);\r\n              console.log(responseDf.data.message);\r\n            }\r\n          } catch (error) {\r\n            setDFFlag(\"fail\");\r\n            setSucDFFlag(false);\r\n            setLoad(false);\r\n            console.log(\"Error uploading file\", error.message);\r\n          }\r\n        };\r\n      }\r\n      if (deviationsFiles.length === 0 && mode === \"R\") {\r\n        setSucDFFlag(true);\r\n      }\r\n    };\r\n    if (\r\n      selectedLtc != undefined &&\r\n      sucFlag != false &&\r\n      sucVsFFlag != true &&\r\n      sucVsgFFlag != true &&\r\n      sucDFFlag != true\r\n    ) {\r\n      uploadAttachments();\r\n    }\r\n  }, [selectedLtc, sucFlag]);\r\n\r\n  useEffect(() => {\r\n    const sendEmail = async () => {\r\n      setLoad(true);\r\n      try {\r\n        let to = \"\";\r\n        let id = 0;\r\n        if (approverMat.proposer !== \"\" && approverMat.proposer !== undefined) {\r\n          to = `${approverMat.PEmail}`;\r\n          id = approverMat.proposer.split(\"|\")[0];\r\n        } else if (\r\n          approverMat.addproposer !== \"\" &&\r\n          approverMat.addproposer !== undefined\r\n        ) {\r\n          to = `${approverMat.APEmail}`;\r\n          id = approverMat.addproposer.split(\"|\")[0];\r\n        } else if (\r\n          approverMat.verifier !== \"\" &&\r\n          approverMat.verifier !== undefined\r\n        ) {\r\n          to = `${approverMat.VEmail}`;\r\n          id = approverMat.verifier.split(\"|\")[0];\r\n        } else if (\r\n          approverMat.recommender1 !== \"\" &&\r\n          approverMat.recommender1 !== undefined\r\n        ) {\r\n          to = `${approverMat.R1Email}`;\r\n          id = approverMat.recommender1.split(\"|\")[0];\r\n        } else if (\r\n          approverMat.recommender2 !== \"\" &&\r\n          approverMat.recommender2 !== undefined\r\n        ) {\r\n          to = `${approverMat.R2Email}`;\r\n          id = approverMat.recommender2.split(\"|\")[0];\r\n        } else {\r\n          to = `${approverMat.AEmail}`;\r\n          id = approverMat.approver.split(\"|\")[0];\r\n        }\r\n        var subCatString = \"\";\r\n        types.forEach((type) => {\r\n          if (type.cc_flag == 1) {\r\n            subCatString = subCatString + type.cc_con_sub_cat + \", \";\r\n          }\r\n        });\r\n        if (mode === \"N\") {\r\n          const response = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/send/genEmail`,\r\n            {\r\n              ADID: `${process.env.REACT_APP_ID}`,\r\n              PASS: `${process.env.REACT_APP_PASS}`,\r\n              TO: to,\r\n              SUB: `LTC Form (New) - Request is awaiting your approval for ${vendorName}`,\r\n              TXT: `\r\n              Dear Sir/Ma'am,\r\n\r\n              Please find below details\r\n              LTC ID :  ${selectedLtc}/V1\r\n              Registered By\t:  ${name} (${ADID})\r\n              Registered Date\t:  ${formatDate(currentDate)}\r\n              Vendor Name :  ${vendorName} (${vendorSelect})\r\n              Category of contract :  ${conCategory}\r\n              LTC Sub category :  ${subCatString}\r\n              Current Status\t:  Pending for approval with (${id})\r\n\r\n              Click/Copy the below url to your browser\r\n              ${process.env.REACT_APP_FRONTEND_URL}/ovoc/cr/${id}/${selectedLtc}\r\n              \r\n              Regards,\r\n              IPMS Team\r\n              \r\n              ****This is a system generated mail****`,\r\n            }\r\n          );\r\n          if (response.message == \"Mail sent\") {\r\n            console.log(response.message);\r\n            window.location.reload();\r\n            setLoad(false);\r\n          } else {\r\n            console.log(response.message);\r\n            window.location.reload();\r\n            setLoad(false);\r\n          }\r\n        }\r\n        if (mode === \"A\") {\r\n          const response1 = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/send/genEmail`,\r\n            {\r\n              ADID: `${process.env.REACT_APP_ID}`,\r\n              PASS: `${process.env.REACT_APP_PASS}`,\r\n              TO: to,\r\n              SUB: `LTC Form (Modification) - Request is awaiting your approval for ${vendorName}`,\r\n              TXT: `\r\n              Dear Sir/Ma'am,\r\n\r\n              Please find below details\r\n              Last approved Request ID :  ${selectedLtc}/V${ltcVersion}\r\n              Last registered by :  ${types[0]?.con_modify_by}\r\n              Last registered date :  ${formatDate(types[0]?.con_modify_date.split(\"T\")[0])}\r\n              New Request ID :  ${selectedLtc}/V${ltcVersion + 1}\r\n              Registered By\t:  ${name} (${ADID})\r\n              Registered Date\t:  ${formatDate(currentDate)}\r\n              Vendor Name :  ${vendorName} (${vendorSelect})\r\n              Category of contract :  ${conCategory}\r\n              LTC Sub category :  ${subCatString}\r\n              Current Status\t:  Pending for approval with (${id})\r\n\r\n              Click/Copy the below url to your browser\r\n              ${process.env.REACT_APP_FRONTEND_URL}/ovoc/cr/${id}/${selectedLtc}\r\n              \r\n              Regards,\r\n              IPMS Team\r\n              \r\n              ****This is a system generated mail****`,\r\n            }\r\n          );\r\n          const response2 = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/send/genEmail`,\r\n            {\r\n              ADID: `${process.env.REACT_APP_ID}`,\r\n              PASS: `${process.env.REACT_APP_PASS}`,\r\n              TO: types[0]?.con_modify_email,\r\n              SUB: `LTC Form (Modification) - Request is modified for ${vendorName}`,\r\n              TXT: `\r\n              Dear Sir/Ma'am,\r\n\r\n              Please find below details\r\n              Below mentioned request ID is initiated for modification in existing LTC Form for ${vendorName}, this is for your information.\r\n              Last approved Request ID :  ${selectedLtc}/V${ltcVersion}\r\n              Last registered by :  ${types[0]?.con_modify_by}\r\n              Last registered date :  ${formatDate(types[0]?.con_modify_date.split(\"T\")[0])}\r\n              New Request ID :  ${selectedLtc}/V${ltcVersion + 1}\r\n              Registered By\t:  ${name} (${ADID})\r\n              Registered Date\t:  ${formatDate(currentDate)}\r\n              Vendor Name :  ${vendorName} (${vendorSelect})\r\n              Category of contract :  ${conCategory}\r\n              LTC Sub category :  ${subCatString}\r\n              Current Status\t:  Pending for approval with (${id})\r\n              \r\n              Regards,\r\n              IPMS Team\r\n              \r\n              ****This is a system generated mail****`,\r\n            }\r\n          );\r\n          if (\r\n            response1.message == \"Mail sent\" &&\r\n            response2.message == \"Mail sent\"\r\n          ) {\r\n            console.log(response1.message);\r\n            window.location.reload();\r\n            setLoad(false);\r\n          } else {\r\n            console.log(response1.message);\r\n            window.location.reload();\r\n            setLoad(false);\r\n          }\r\n        }\r\n        if (mode === \"R\") {\r\n          var response = \"\";\r\n          if (arcContractDetails == \"undefined\" || arcContractDetails == \"\") {\r\n            response = await axios.post(\r\n              `${process.env.REACT_APP_BACKEND_URL}/send/genEmail`,\r\n              {\r\n                ADID: `${process.env.REACT_APP_ID}`,\r\n                PASS: `${process.env.REACT_APP_PASS}`,\r\n                TO: to,\r\n                SUB: `LTC Form (New) - Request is awaiting your approval for ${vendorName}`,\r\n                TXT: `\r\n                Dear Sir/Ma'am,\r\n  \r\n                Please find below details\r\n                LTC ID :  ${selectedLtc}/V${ltcVersion + 1}\r\n                Registered By\t:  ${name} (${ADID})\r\n                Registered Date\t:  ${formatDate(currentDate)}\r\n                Vendor Name :  ${vendorName} (${vendorSelect})\r\n                Category of contract :  ${conCategory}\r\n                LTC Sub category :  ${subCatString}\r\n                Current Status\t:  Pending for approval with (${id})\r\n  \r\n                Click/Copy the below url to your browser\r\n                ${\r\n                  process.env.REACT_APP_FRONTEND_URL\r\n                }/ovoc/cr/${id}/${selectedLtc}\r\n                \r\n                Regards,\r\n                IPMS Team\r\n                \r\n                ****This is a system generated mail****`,\r\n              }\r\n            );\r\n          } else {\r\n            response = await axios.post(\r\n              `${process.env.REACT_APP_BACKEND_URL}/send/genEmail`,\r\n              {\r\n                ADID: `${process.env.REACT_APP_ID}`,\r\n                PASS: `${process.env.REACT_APP_PASS}`,\r\n                TO: to,\r\n                SUB: `LTC Form (Modification) - Request is awaiting your approval for ${vendorName}`,\r\n                TXT: `\r\n                Dear Sir/Ma'am,\r\n  \r\n                Please find below details\r\n                Last approved Request ID :  ${selectedLtc}/V${\r\n                  arcContractDetails[0]?.con_version\r\n                }\r\n                Last registered by :  ${arcContractDetails[0]?.con_modify_by}\r\n                Last registered date :  ${\r\n                  formatDate(arcContractDetails[0]?.con_modify_date.split(\"T\")[0])\r\n                }\r\n                New Request ID :  ${selectedLtc}/V${ltcVersion + 1}\r\n                Registered By\t:  ${name} (${ADID})\r\n                Registered Date\t:  ${formatDate(currentDate)}\r\n                Vendor Name :  ${vendorName} (${vendorSelect})\r\n                Category of contract :  ${conCategory}\r\n                LTC Sub category :  ${subCatString}\r\n                Current Status\t:  Pending for approval with (${id})\r\n  \r\n                Click/Copy the below url to your browser\r\n                ${\r\n                  process.env.REACT_APP_FRONTEND_URL\r\n                }/ovoc/cr/${id}/${selectedLtc}\r\n                \r\n                Regards,\r\n                IPMS Team\r\n                \r\n                ****This is a system generated mail****`,\r\n              }\r\n            );\r\n          }\r\n          if (response.message == \"Mail sent\") {\r\n            console.log(response.message);\r\n            window.location.reload();\r\n            setLoad(false);\r\n          } else {\r\n            console.log(response.message);\r\n            window.location.reload();\r\n            setLoad(false);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error in mail Sending\", error);\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n          setLoad(false);\r\n        }, 12000);\r\n      }\r\n    };\r\n    if (\r\n      selectedLtc != undefined &&\r\n      sucFlag != false &&\r\n      sucVsFFlag != undefined &&\r\n      sucVsgFFlag != undefined &&\r\n      sucDFFlag != undefined\r\n    ) {\r\n      if (sucFlag && sucVsFFlag && sucVsgFFlag && sucDFFlag) {\r\n        toast.success(toastMessage);\r\n        sendEmail();\r\n        // setTimeout(() => {\r\n        //   window.location.reload();\r\n        //   setLoad(false);\r\n        // }, 12000);\r\n      } else if (\r\n        sucFlag &&\r\n        (vsFFlag == \"fail\" || vsgFFlag == \"fail\" || dFFlag == \"fail\")\r\n      ) {\r\n        axios.post(\r\n          `${process.env.REACT_APP_BACKEND_URL}/delete/newTransaction`,\r\n          {\r\n            ContractId: selectedLtc,\r\n          }\r\n        );\r\n        setLoad(false);\r\n      } else {\r\n        toast.error(\"CR operation Failed!\");\r\n      }\r\n    }\r\n  }, [\r\n    selectedLtc,\r\n    sucFlag,\r\n    sucVsFFlag,\r\n    sucVsgFFlag,\r\n    sucDFFlag,\r\n    vsFFlag,\r\n    vsgFFlag,\r\n    dFFlag,\r\n  ]);\r\n\r\n  const handleTypeLock = async (index) => {\r\n    debugger;\r\n    let lock = 0;\r\n    prevTypes.forEach((item, ind) => {\r\n      if (ind == index && item.checked) {\r\n        lock = 1;\r\n      }\r\n    });\r\n    if (lock === 1) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleFetchFile = async (id) => {\r\n    if (!id) {\r\n      toast.error(\"No file found\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BACKEND_URL}/attachments/getAttachments/${id}`,\r\n        {\r\n          responseType: \"blob\",\r\n        }\r\n      );\r\n      if (response) {\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.setAttribute(\"download\", id);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n      } else {\r\n        toast.error(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Error fetching file.\");\r\n      console.log(`Error fetching file: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (deviationsLabel === \"N\" && !toast.isActive(toastId.current)) {\r\n      toastId.current = toast.info(\r\n        \"LTC effective prior to implementation of online LTC portal and No Deviation OR Deviation in Terms of payment and / or delivery schedule only. 2 Level approval matrix selected.\"\r\n      );\r\n    } else if (\r\n      deviationsLabel === \"Y\" &&\r\n      ltaAfterImp == false &&\r\n      !toast.isActive(toastId.current)\r\n    ) {\r\n      toastId.current = toast.info(\r\n        \"LTC effective prior to implementation of online LTC portal and Any other deviation except Terms of Payment / Delivery Schedule. 3 Level approval matrix selected.\"\r\n      );\r\n    } else if (\r\n      deviationsLabel === \"Y\" &&\r\n      ltaAfterImp &&\r\n      !toast.isActive(toastId.current)\r\n    ) {\r\n      toastId.current = toast.info(\r\n        \"LTC effective after implementation of online LTC portal and Any other deviation except Terms of Payment / Delivery Schedule. Approval matrix selected as per SOP.\"\r\n      );\r\n    }\r\n  }, [deviationsLabel, ltaAfterImp]);\r\n\r\n  return (\r\n    <>\r\n      {load && <Loader />}\r\n      <ToastContainer position=\"top-center\" className=\"mt-60\" />\r\n      <div className=\"flex-1 overflow-auto relative pt-16\">\r\n        <div className=\"bg-img absolute inset-0\">\r\n          <div className=\"absolute inset-0 bg-white opacity-85\"></div>\r\n          <div className=\"relative p-4 flex-col justify-between items-center\">\r\n            <div className=\"text-xl font-bold flex-grow text-center\">\r\n              Long Term Agreement on Commercial terms & conditions (LTC)\r\n              Form&nbsp;\r\n              {mode == \"N\" ? \"(New Form)\" : \"(Modification in existing LTC)\"}\r\n            </div>\r\n            <div className=\"flex justify-end w-full\">\r\n              {/* Created by Span */}\r\n              <div className=\"relative mr-0.5 flex-col justify-between items-center\">\r\n                {/* Created by Span */}\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"text-black font-small\">User:</span>\r\n                  <span className=\"ml-2 text-black\">\r\n                    {name} ({ADID})\r\n                  </span>\r\n                </div>\r\n\r\n                {/* Created on Span */}\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"text-black font-small\">Date:</span>\r\n                  <span className=\"ml-2 text-black\">\r\n                    {formatDate(currentDate)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Vendor Code textbox */}\r\n            <div className=\"w-full md:flex mb-2 mt-4\">\r\n              <div className=\"md:w-1/3\">\r\n                <label\r\n                  htmlFor=\"vendorCode\"\r\n                  className=\"ml-2 text-black font-small\"\r\n                >\r\n                  Vendor Code<span className=\"text-red-500\">*</span>\r\n                </label>\r\n              </div>\r\n              <div class=\"md:2/3 flex items-center\">\r\n                <Autocomplete\r\n                  className=\"p-0 rounded bg-white border border-gray-400 flex-grow\"\r\n                  {...defaultProps}\r\n                  id=\"vendorCode\"\r\n                  disableClearable\r\n                  onChange={(event, value) => {\r\n                    setTypes([]);\r\n                    setLtaAfterImp(true);\r\n                    setMode(\"N\");\r\n                    setDisableVendorSharedFiles(true);\r\n                    setDisableVendorSignedFiles(true);\r\n                    setDisableDeviationsFiles(true);\r\n                    setSelectedLtc();\r\n                    setScope();\r\n                    setIntro();\r\n                    setDeviationsLabel();\r\n                    setLtcVersion();\r\n                    setReady(false);\r\n                    setChkList([]);\r\n                    setCheckChkListFlags(false);\r\n                    setOtc(\"\");\r\n                    setOsc(\"\");\r\n                    setDeviationsFiles([]);\r\n                    setVendorSharedFiles([]);\r\n                    setVendorSignedFiles([]);\r\n                    setApproverMat({\r\n                      proposer: \"\",\r\n                      proposerRole: \"\",\r\n                      PEmail: \"\",\r\n                      addproposer: \"\",\r\n                      addproposerRole: \"\",\r\n                      APEmail: \"\",\r\n                      verifier: \"\",\r\n                      verifierRole: \"\",\r\n                      VEmail: \"\",\r\n                      recommender1: \"\",\r\n                      recommender1Role: \"\",\r\n                      R1Email: \"\",\r\n                      recommender2: \"\",\r\n                      recommender2Role: \"\",\r\n                      R2Email: \"\",\r\n                      approver: \"\",\r\n                      approverRole: \"\",\r\n                      AEmail: \"\",\r\n                    });\r\n                    setAppArcDet();\r\n                    setVendorName();\r\n                    setVendorAddress();\r\n                    setVendorEmail(\"\");\r\n                    setVendorMobile();\r\n                    setConCategory();\r\n                    setVendorSelect(value.INV_VENDOR_CODE.split(\"|\")[0]);\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      variant=\"standard\"\r\n                      fullWidth\r\n                      required\r\n                      style={{ width: \"300px\" }}\r\n                    />\r\n                  )}\r\n                />\r\n                <button\r\n                  className=\"ml-2 p-1 rounded bg-gray-300 hover:bg-orange-200\"\r\n                  onClick={handleVendorClick}\r\n                >\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Vendor Name display */}\r\n            <div className=\"relative w-full md:flex mb-2\">\r\n              <div className=\"md:w-1/3\">\r\n                <label\r\n                  htmlFor=\"vendorName\"\r\n                  className=\"ml-2 text-black font-small\"\r\n                >\r\n                  Vendor Name\r\n                </label>\r\n              </div>\r\n              <div className=\"md:w-2/3\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"vendorName\"\r\n                  value={vendorName}\r\n                  placeholder=\"Vendor Name\"\r\n                  className=\"p-0 rounded w-full bg-gray-200 border border-gray-400\"\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Vendor Address display */}\r\n            <div className=\"relative w-full md:flex mb-2\">\r\n              <div className=\"md:w-1/3\">\r\n                <label\r\n                  htmlFor=\"vendorAdd\"\r\n                  className=\"ml-2 text-black font-small\"\r\n                >\r\n                  Vendor Address\r\n                </label>\r\n              </div>\r\n              <div className=\"md:w-2/3\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"vendorAdd\"\r\n                  value={vendorAddress}\r\n                  placeholder=\"Vendor Address\"\r\n                  className=\"p-0 rounded w-full bg-gray-200 border border-gray-400\"\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Vendor Contact display */}\r\n            <div className=\"relative w-full md:flex mb-2\">\r\n              <div className=\"md:w-1/3\">\r\n                <label\r\n                  htmlFor=\"vendorEmail\"\r\n                  className=\"ml-2 text-black font-small\"\r\n                >\r\n                  Vendor Email\r\n                </label>\r\n              </div>\r\n              <div className=\"md:w-2/3\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"vendorEmail\"\r\n                  value={vendorEmail}\r\n                  placeholder=\"Vendor Email\"\r\n                  className=\"p-0 rounded w-full bg-gray-200 border border-gray-400\"\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"relative w-full md:flex mb-2\">\r\n              <div className=\"md:w-1/3\">\r\n                <label\r\n                  htmlFor=\"vendorCon\"\r\n                  className=\"ml-2 text-black font-small\"\r\n                >\r\n                  Vendor Contact\r\n                </label>\r\n              </div>\r\n              <div className=\"md:w-2/3\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"vendorCon\"\r\n                  value={vendorMobile}\r\n                  placeholder=\"Vendor Contact\"\r\n                  className=\"p-0 rounded w-full bg-gray-200 border border-gray-400\"\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"relative w-full md:flex mb-2\">\r\n              <div className=\"md:w-1/3\">\r\n                <label\r\n                  htmlFor=\"categoryOfCon\"\r\n                  className=\"ml-2 text-black font-small\"\r\n                >\r\n                  Category of contract<span className=\"text-red-500\">*</span>\r\n                </label>\r\n              </div>\r\n              <div className=\"md:w-2/3\">\r\n                <RadioGroup\r\n                  row\r\n                  onChange={handleConCategory}\r\n                  value={conCategory == undefined ? \"\" : conCategory}\r\n                  required\r\n                >\r\n                  <FormControlLabel\r\n                    className=\"ml-4\"\r\n                    value=\"Standard\"\r\n                    control={<Radio />}\r\n                    label=\"Standard\"\r\n                  />\r\n                  <FormControlLabel\r\n                    className=\"ml-4\"\r\n                    value=\"Small\"\r\n                    control={<Radio />}\r\n                    label=\"General Order\"\r\n                  />\r\n                </RadioGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Contract Sub Categories */}\r\n            <AlertDialog Mode={mode} Head={head} Warn={warn} />\r\n            <div className=\"relative w-full md:flex mb-2\">\r\n              <div className=\"md:w-1/3\">\r\n                <label className=\"ml-2 text-black font-small\">\r\n                  LTC Sub-Category<span className=\"text-red-500\">*</span>\r\n                </label>\r\n              </div>\r\n              <div className=\"md:w-2/3\">\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead className=\"py-2 bg-blue-100\">\r\n                      <TableRow>\r\n                        <TableCell\r\n                          style={{\r\n                            color: \"black\",\r\n                            width: \"10%\",\r\n                            fontWeight: \"bold\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          Add\r\n                        </TableCell>\r\n                        <TableCell\r\n                          style={{\r\n                            color: \"black\",\r\n                            width: \"20%\",\r\n                            fontWeight: \"bold\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          Type\r\n                        </TableCell>\r\n                        <TableCell\r\n                          style={{\r\n                            color: \"black\",\r\n                            width: \"10%\",\r\n                            fontWeight: \"bold\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          Years<span className=\"text-red-500\">*</span>\r\n                        </TableCell>\r\n                        <TableCell\r\n                          style={{\r\n                            color: \"black\",\r\n                            width: \"10%\",\r\n                            fontWeight: \"bold\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          Months<span className=\"text-red-500\">*</span>\r\n                        </TableCell>\r\n                        <TableCell\r\n                          style={{\r\n                            color: \"black\",\r\n                            width: \"25%\",\r\n                            fontWeight: \"bold\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          Start Date<span className=\"text-red-500\">*</span>\r\n                        </TableCell>\r\n                        <TableCell\r\n                          style={{\r\n                            color: \"black\",\r\n                            width: \"25%\",\r\n                            fontWeight: \"bold\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          End Date<span className=\"text-red-500\">*</span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {types?.map((row, index) => (\r\n                        <TableRow key={index}>\r\n                          <TableCell\r\n                            style={{\r\n                              color: \"black\",\r\n                              width: \"10%\",\r\n                              textAlign: \"center\",\r\n                            }}\r\n                          >\r\n                            <Checkbox\r\n                              checked={row.checked}\r\n                              // disabled={\r\n                              //   mode === \"A\" ? handleTypeLock(index) : false\r\n                              // }\r\n                              onChange={(e) => {\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"checked\",\r\n                                  e.target.checked\r\n                                );\r\n                              }}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell\r\n                            className=\"py-2 items-center justify-between w-2/12\"\r\n                            style={\r\n                              row.cc_flag\r\n                                ? {\r\n                                    color: \"green\",\r\n                                    width: \"20%\",\r\n                                    textAlign: \"center\",\r\n                                  }\r\n                                : {\r\n                                    color: \"red\",\r\n                                    width: \"20%\",\r\n                                    textAlign: \"center\",\r\n                                  }\r\n                            }\r\n                          >\r\n                            {row.cc_con_sub_cat}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            style={{\r\n                              color: \"black\",\r\n                              width: \"20%\",\r\n                              textAlign: \"center\",\r\n                            }}\r\n                          >\r\n                            <Autocomplete\r\n                              id=\"tenureYears\"\r\n                              value={row.cc_con_t_years}\r\n                              required\r\n                              disabled={\r\n                                mode === \"UA\" ||\r\n                                ((mode === \"N\" ||\r\n                                  mode === \"A\" ||\r\n                                  mode === \"R\") &&\r\n                                  row.checked == false)\r\n                              }\r\n                              options={[1, 2, 3, 4, 5]}\r\n                              getOptionLabel={(option) => option.toString()}\r\n                              onChange={(event, value) => {\r\n                                setYearsSelect(value);\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"cc_con_t_years\",\r\n                                  value\r\n                                );\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  variant=\"standard\"\r\n                                  fullWidth\r\n                                  disabled={\r\n                                    mode === \"UA\" ||\r\n                                    ((mode === \"N\" ||\r\n                                      mode === \"A\" ||\r\n                                      mode === \"R\") &&\r\n                                      row.checked == false)\r\n                                  }\r\n                                  required\r\n                                />\r\n                              )}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell\r\n                            style={{\r\n                              color: \"black\",\r\n                              width: \"20%\",\r\n                              textAlign: \"center\",\r\n                            }}\r\n                          >\r\n                            <Autocomplete\r\n                              id=\"tenureMonths\"\r\n                              value={row.cc_con_t_months}\r\n                              required\r\n                              disabled={\r\n                                mode === \"UA\" ||\r\n                                ((mode === \"N\" ||\r\n                                  mode === \"A\" ||\r\n                                  mode === \"R\") &&\r\n                                  row.checked == false)\r\n                              }\r\n                              options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]}\r\n                              getOptionLabel={(option) => option.toString()}\r\n                              onChange={(event, value) => {\r\n                                setMonthsSelect(value);\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"cc_con_t_months\",\r\n                                  value\r\n                                );\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  variant=\"standard\"\r\n                                  fullWidth\r\n                                  disabled={\r\n                                    mode === \"UA\" ||\r\n                                    ((mode === \"N\" ||\r\n                                      mode === \"A\" ||\r\n                                      mode === \"R\") &&\r\n                                      row.checked == false)\r\n                                  }\r\n                                  required\r\n                                />\r\n                              )}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell\r\n                            style={{\r\n                              color: \"black\",\r\n                              width: \"25%\",\r\n                              textAlign: \"center\",\r\n                            }}\r\n                          >\r\n                            <input\r\n                              className=\"peer h-full w-full rounded-[7px] border border-blue-gray-200 bg-transparent px-3 py-2.5 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-gray-900 focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50 cursor-pointer\"\r\n                              type=\"date\"\r\n                              max={new Date().toISOString().split(\"T\")[0]}\r\n                              value={row.cc_con_s_date?.split(\"T\")[0]}\r\n                              placeholder=\"Start Date\"\r\n                              required\r\n                              disabled={\r\n                                mode === \"UA\" ||\r\n                                ((mode === \"N\" ||\r\n                                  mode === \"A\" ||\r\n                                  mode === \"R\") &&\r\n                                  row.checked == false)\r\n                              }\r\n                              onChange={(event) =>\r\n                                handleDates(\r\n                                  index,\r\n                                  event.target.value,\r\n                                  yearsSelect,\r\n                                  monthsSelect\r\n                                )\r\n                              }\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell\r\n                            style={{\r\n                              color: \"black\",\r\n                              width: \"25%\",\r\n                              textAlign: \"center\",\r\n                            }}\r\n                          >\r\n                            <input\r\n                              className=\"peer h-full w-full rounded-[7px] border border-blue-gray-200 bg-transparent px-3 py-2.5 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-gray-900 focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50 cursor-pointer\"\r\n                              type=\"date\"\r\n                              value={row.cc_con_e_date?.split(\"T\")[0]}\r\n                              disabled={true}\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-transparent relative w-full md:flex mb-2\">\r\n              <div className=\"md:w-1/3\">\r\n                <label className=\"ml-2 text-black font-small\">\r\n                  Introduction<span className=\"text-red-500\">*</span>\r\n                </label>\r\n              </div>\r\n              <div className=\"md:w-2/3\">\r\n                <TextField\r\n                  className=\"w-full p-1 bg-blue-50 rounded shadow-inner\"\r\n                  style={{ minHeight: \"30px\" }}\r\n                  value={intro != undefined ? intro : \"\"}\r\n                  required\r\n                  multiline\r\n                  error={!!errors.intro}\r\n                  helperText={errors.intro}\r\n                  onChange={(e) => {\r\n                    setIntro(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-transparent relative w-full md:flex mb-2\">\r\n              <div className=\"md:w-1/3\">\r\n                <label className=\"ml-2 text-black font-small\">\r\n                  Scope<span className=\"text-red-500\">*</span>\r\n                </label>\r\n              </div>\r\n              <div className=\"md:w-2/3\">\r\n                <TextField\r\n                  className=\"w-full p-1 bg-blue-50 rounded shadow-inner\"\r\n                  value={scope != undefined ? scope : \"\"}\r\n                  required\r\n                  multiline\r\n                  style={{ minHeight: \"30px\" }}\r\n                  error={!!errors.scope}\r\n                  helperText={errors.scope}\r\n                  onChange={(e) => {\r\n                    setScope(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"relative w-full md:flex mb-2\">\r\n              <div className=\"md:w-1/3\">\r\n                <label className=\"ml-2 text-black font-small\">\r\n                  Deviations<span className=\"text-red-500\">*</span>\r\n                </label>\r\n              </div>\r\n              <div className=\"md:w-2/3 flex-col\">\r\n                <RadioGroup\r\n                  onChange={(event) => {\r\n                    if (mode == \"N\") {\r\n                      setChkList([]);\r\n                    }\r\n                    setCheckChkListFlags(false);\r\n                    if (mode == \"N\" || mode == \"A\") {\r\n                      setApproverMat({\r\n                        proposer: \"\",\r\n                        proposerRole: \"\",\r\n                        PEmail: \"\",\r\n                        addproposer: \"\",\r\n                        addproposerRole: \"\",\r\n                        APEmail: \"\",\r\n                        verifier: \"\",\r\n                        verifierRole: \"\",\r\n                        VEmail: \"\",\r\n                        recommender1: \"\",\r\n                        recommender1Role: \"\",\r\n                        R1Email: \"\",\r\n                        recommender2: \"\",\r\n                        recommender2Role: \"\",\r\n                        R2Email: \"\",\r\n                        approver: \"\",\r\n                        approverRole: \"\",\r\n                        AEmail: \"\",\r\n                      });\r\n                    }\r\n                    // reset\r\n                    setDeviationsLabel(event.target.value);\r\n                    //             setHead(\"Approval matrix!!\");\r\n                    //             setWarn(`Approval matrix captured will reduce to 2 level.\r\n\r\n                    // Do you wish to proceed?`);\r\n                  }}\r\n                  value={\r\n                    deviationsLabel === \"Y\"\r\n                      ? \"Y\"\r\n                      : deviationsLabel === \"N\"\r\n                      ? \"N\"\r\n                      : \"\"\r\n                  }\r\n                  // value={deviationsLabel}\r\n                  required\r\n                >\r\n                  <FormControlLabel\r\n                    className=\"ml-4\"\r\n                    value=\"Y\"\r\n                    control={<Radio />}\r\n                    label=\"Any other deviation except Terms of Payment / Delivery Schedule\"\r\n                  />\r\n                  <FormControlLabel\r\n                    className=\"ml-4\"\r\n                    value=\"N\"\r\n                    control={<Radio />}\r\n                    label=\"No Deviation OR Deviation in Terms of payment and / or delivery schedule only\"\r\n                  />\r\n                </RadioGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {/* check list */}\r\n            <div className=\"relative w-full md:flex mb-2\">\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead className=\"py-2 bg-blue-100\">\r\n                    <TableRow>\r\n                      <TableCell\r\n                        style={{\r\n                          color: \"blue\",\r\n                          width: \"25%\",\r\n                          fontWeight: \"bolder\",\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        Clauses\r\n                      </TableCell>\r\n                      <TableCell\r\n                        style={{\r\n                          color: \"blue\",\r\n                          width: \"25%\",\r\n                          fontWeight: \"bolder\",\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        Tendor Documents\r\n                      </TableCell>\r\n                      <TableCell\r\n                        style={{\r\n                          color: \"blue\",\r\n                          width: \"50%\",\r\n                          fontWeight: \"bolder\",\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        Flags<span className=\"text-red-500\">*</span>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {chkList?.map((row, rowIndex) => (\r\n                      <TableRow key={rowIndex}>\r\n                        <TableCell\r\n                          style={{\r\n                            width: \"25%\",\r\n                            textWrap: \"wrap\",\r\n                            fontWeight: row.lv2 === null ? \"bolder\" : \"\",\r\n                            textAlign: \"left\",\r\n                          }}\r\n                        >\r\n                          {row.lv2 === null ? row.lv1 + \". \" : \"  \"}\r\n                          {row.Clause}\r\n                        </TableCell>\r\n                        <TableCell style={{ width: \"25%\", textAlign: \"left\" }}>\r\n                          {((deviationsLabel === \"Y\" && row.edit_dev) ||\r\n                            (deviationsLabel === \"N\" && row.edit)) &&\r\n                          false ? (\r\n                            <textarea\r\n                              className=\"w-full p-1 bg-blue-50 rounded shadow-md\"\r\n                              type=\"text\"\r\n                              style={{ minHeight: \"30px\" }}\r\n                              value={\r\n                                row.document === \"null\" ? \"\" : row.document\r\n                              }\r\n                              onChange={(e) =>\r\n                                handleChkInputChange(\r\n                                  rowIndex,\r\n                                  \"document\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              onInput={autoResize}\r\n                            />\r\n                          ) : (\r\n                            <p>{row.document === \"null\" ? \"\" : row.document}</p>\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell style={{ width: \"50%\" }}>\r\n                          {(row.lv2 == \"null\" || row.lv2 == null) &&\r\n                          checkForChildRow(rowIndex) ? (\r\n                            \"\"\r\n                          ) : (\r\n                            <>\r\n                              {checkChkListFlags &&\r\n                                ((deviationsLabel == \"Y\" &&\r\n                                  (row.flag == undefined || row.flag == \"\")) ||\r\n                                  (deviationsLabel == \"N\" &&\r\n                                    row.edit &&\r\n                                    (row.flag == undefined ||\r\n                                      row.flag == \"\")) ||\r\n                                  (deviationsLabel == \"Y\" &&\r\n                                    row.flag == \"N\" &&\r\n                                    (row.remarks == \"null\" ||\r\n                                      row.remarks == null ||\r\n                                      row.remarks == undefined ||\r\n                                      row.remarks == \"\")) ||\r\n                                  (deviationsLabel == \"N\" &&\r\n                                    row.edit &&\r\n                                    row.flag == \"N\" &&\r\n                                    (row.remarks == \"null\" ||\r\n                                      row.remarks == null ||\r\n                                      row.remarks == undefined ||\r\n                                      row.remarks == \"\"))) && (\r\n                                  <text className=\"text-red-500 text-xs\">\r\n                                    Required field missing!\r\n                                  </text>\r\n                                )}\r\n                              <RadioGroup\r\n                                row\r\n                                value={\r\n                                  deviationsLabel === \"N\" && row.edit == false\r\n                                    ? \"Y\"\r\n                                    : row.flag\r\n                                }\r\n                                onChange={(event) =>\r\n                                  handleChkInputChange(\r\n                                    rowIndex,\r\n                                    \"flag\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                                required\r\n                              >\r\n                                <FormControlLabel\r\n                                  value=\"Y\"\r\n                                  control={<Radio />}\r\n                                  label=\"Yes\"\r\n                                />\r\n                                <FormControlLabel\r\n                                  disabled={\r\n                                    deviationsLabel === \"N\" && row.edit == false\r\n                                  }\r\n                                  value=\"N\"\r\n                                  control={<Radio />}\r\n                                  label=\"No\"\r\n                                />\r\n                                {row.na && (\r\n                                  <FormControlLabel\r\n                                    disabled={\r\n                                      deviationsLabel === \"N\" &&\r\n                                      row.edit == false\r\n                                    }\r\n                                    value=\"NA\"\r\n                                    control={<Radio />}\r\n                                    label=\"NA\"\r\n                                  />\r\n                                )}\r\n                              </RadioGroup>\r\n                              {(row.flag === \"N\" || row.flag === \"NA\") && (\r\n                                <textarea\r\n                                  className=\"w-full p-1 bg-blue-50 rounded shadow-md\"\r\n                                  type=\"text\"\r\n                                  value={\r\n                                    row.remarks == \"null\" || row.remarks == null\r\n                                      ? \"\"\r\n                                      : row.remarks\r\n                                  }\r\n                                  disabled={\r\n                                    deviationsLabel === \"N\" && row.edit == false\r\n                                  }\r\n                                  required={row.flag === \"N\" ? true : false}\r\n                                  placeholder={\r\n                                    row.flag === \"N\"\r\n                                      ? \"Remarks required\"\r\n                                      : \"Remarks optional\"\r\n                                  }\r\n                                  onChange={(e) =>\r\n                                    handleChkInputChange(\r\n                                      rowIndex,\r\n                                      \"remarks\",\r\n                                      e.target.value\r\n                                    )\r\n                                  }\r\n                                  onInput={autoResize}\r\n                                />\r\n                              )}\r\n                            </>\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n\r\n            <div className=\"relative w-full md:flex mb-2\">\r\n              <div className=\"md:w-1/3\">\r\n                <label className=\"ml-2 text-black font-small\">\r\n                  Other Commercial Conditions\r\n                </label>\r\n              </div>\r\n              <div className=\"md:w-2/3\">\r\n                <textarea\r\n                  className=\"w-full p-1 bg-blue-50 rounded shadow-inner\"\r\n                  type=\"text\"\r\n                  value={otc == \"\" ? \"\" : otc}\r\n                  required\r\n                  style={{ minHeight: \"30px\" }}\r\n                  onInput={autoResize}\r\n                  onChange={(e) => {\r\n                    setOtc(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"relative w-full md:flex mb-2\">\r\n              <div className=\"md:w-1/3\">\r\n                <label className=\"ml-2 text-black font-small\">\r\n                  Commercial Recommendation\r\n                </label>\r\n              </div>\r\n              <div className=\"md:w-2/3\">\r\n                <textarea\r\n                  className=\"w-full p-1 bg-blue-50 rounded shadow-inner\"\r\n                  type=\"text\"\r\n                  value={osc == \"\" ? \"\" : osc}\r\n                  required\r\n                  style={{ minHeight: \"30px\" }}\r\n                  onInput={autoResize}\r\n                  onChange={(e) => {\r\n                    setOsc(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"flex-col bg-blue-50 rounded-xl\">\r\n                <div className=\"bg-blue-300 px-2 justify-start rounded-t-xl text-xl font-bold\">\r\n                  Attachments\r\n                </div>\r\n                {(mode === \"N\" || mode === \"A\" || mode === \"R\") && (\r\n                  <>\r\n                    <div className=\"bg-transparent relative w-full md:flex mb-2\">\r\n                      <div className=\"md:w-1/3\">\r\n                        <label className=\"ml-2 text-black font-small\">\r\n                          Contract shared with vendor\r\n                          <span className=\"text-red-500\">*</span>\r\n                          <span className=\"mr-0.5 text-xs\">\r\n                            (Multiple docx, doc)\r\n                          </span>\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"flex md:w-2/3\">\r\n                        <div className=\"md:w-1/2\">\r\n                          <input\r\n                            type=\"file\"\r\n                            onChange={handleVendorSharedFilesChange}\r\n                            accept=\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n                            multiple\r\n                            disabled={mode === \"R\" && disableVendorSharedFiles}\r\n                          />\r\n                        </div>\r\n                        {(mode === \"A\" ||\r\n                          (mode === \"R\" && disableVendorSharedFiles)) && (\r\n                          <div className=\"flex md:w-1/2 items-center text-sm italic\">\r\n                            {mode === \"R\" && disableVendorSharedFiles && (\r\n                              <button\r\n                                className=\"mr-2\"\r\n                                onClick={() => {\r\n                                  setDisableVendorSharedFiles(false);\r\n                                }}\r\n                              >\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  viewBox=\"0 0 32 32\"\r\n                                  width=\"32px\"\r\n                                  height=\"32px\"\r\n                                  fill-rule=\"evenodd\"\r\n                                  clip-rule=\"evenodd\"\r\n                                  baseProfile=\"basic\"\r\n                                >\r\n                                  <path\r\n                                    fill=\"#e41e2f\"\r\n                                    fill-rule=\"evenodd\"\r\n                                    d=\"M16.997,18.997v2h2v2h2\tv2h2v2h2v-2h2v-2h-2v-2h-2v-2h-2v-2h-2v-2h2v-2h2v-2h2v-2h2v-2h-2v-2h-2v2h-2v2h-2v2h-2v2h-2v-2h-2v-2h-2v-2h-2v-2h-2v2h-2v2h2v2h2\tv2h2v2h2v2h-2v2h-2v2h-2v2h-2v2h2v2h2v-2h2v-2h2v-2h2v-2H16.997z\"\r\n                                    clip-rule=\"evenodd\"\r\n                                  />\r\n                                </svg>\r\n                              </button>\r\n                            )}\r\n                            Last Upload: &nbsp;\r\n                            <button\r\n                              onClick={() => {\r\n                                const id = types[0].con_VSF;\r\n                                handleFetchFile(id);\r\n                              }}\r\n                              className=\"text-blue-700 underline\"\r\n                            >\r\n                              {types[0].con_VSF}\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"bg-transparent relative w-full md:flex mb-2\">\r\n                      <div className=\"md:w-1/3\">\r\n                        <label className=\"ml-2 text-black font-small\">\r\n                          Vendor Signed Contract\r\n                          <span className=\"text-red-500\">*</span>\r\n                          <span className=\"mr-0.5 text-xs\">\r\n                            (Multiple PDFs)\r\n                          </span>\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"flex md:w-2/3\">\r\n                        <div className=\"md:w-1/2\">\r\n                          <input\r\n                            type=\"file\"\r\n                            onChange={handleVendorSignedFilesChange}\r\n                            accept=\"application/pdf\"\r\n                            multiple\r\n                            disabled={mode === \"R\" && disableVendorSignedFiles}\r\n                          />\r\n                        </div>\r\n                        {(mode === \"A\" ||\r\n                          (mode === \"R\" && disableVendorSignedFiles)) && (\r\n                          <div className=\"flex md:w-1/2 items-center text-sm italic\">\r\n                            {mode === \"R\" && disableVendorSignedFiles && (\r\n                              <button\r\n                                className=\"mr-2\"\r\n                                onClick={() => {\r\n                                  setDisableVendorSignedFiles(false);\r\n                                }}\r\n                              >\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  viewBox=\"0 0 32 32\"\r\n                                  width=\"32px\"\r\n                                  height=\"32px\"\r\n                                  fill-rule=\"evenodd\"\r\n                                  clip-rule=\"evenodd\"\r\n                                  baseProfile=\"basic\"\r\n                                >\r\n                                  <path\r\n                                    fill=\"#e41e2f\"\r\n                                    fill-rule=\"evenodd\"\r\n                                    d=\"M16.997,18.997v2h2v2h2\tv2h2v2h2v-2h2v-2h-2v-2h-2v-2h-2v-2h-2v-2h2v-2h2v-2h2v-2h2v-2h-2v-2h-2v2h-2v2h-2v2h-2v2h-2v-2h-2v-2h-2v-2h-2v-2h-2v2h-2v2h2v2h2\tv2h2v2h2v2h-2v2h-2v2h-2v2h-2v2h2v2h2v-2h2v-2h2v-2h2v-2H16.997z\"\r\n                                    clip-rule=\"evenodd\"\r\n                                  />\r\n                                </svg>\r\n                              </button>\r\n                            )}\r\n                            Last Upload: &nbsp;\r\n                            <button\r\n                              onClick={() => {\r\n                                const id = types[0].con_VSgF;\r\n                                handleFetchFile(id);\r\n                              }}\r\n                              className=\"text-blue-700 underline\"\r\n                            >\r\n                              {types[0].con_VSgF}\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"bg-transparent relative w-full md:flex mb-2\">\r\n                      <div className=\"md:w-1/3\">\r\n                        <label className=\"ml-2 text-black font-small\">\r\n                          Final Deviations list\r\n                          <span className=\"text-red-500\">*</span>\r\n                          <span className=\"mr-0.5 text-xs\">\r\n                            (Multiple PDFs)\r\n                          </span>\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"flex md:w-2/3\">\r\n                        <div className=\"md:w-1/2\">\r\n                          <input\r\n                            type=\"file\"\r\n                            onChange={handleDeviationsFileChange}\r\n                            accept=\"application/pdf\"\r\n                            multiple\r\n                            disabled={mode === \"R\" && disableDeviationsFiles}\r\n                          />\r\n                        </div>\r\n                        {(mode === \"A\" ||\r\n                          (mode === \"R\" && disableDeviationsFiles)) && (\r\n                          <div className=\"flex md:w-1/2 items-center text-sm italic\">\r\n                            {mode === \"R\" && disableDeviationsFiles && (\r\n                              <button\r\n                                className=\"mr-2\"\r\n                                onClick={() => {\r\n                                  setDisableDeviationsFiles(false);\r\n                                }}\r\n                              >\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  viewBox=\"0 0 32 32\"\r\n                                  width=\"32px\"\r\n                                  height=\"32px\"\r\n                                  fill-rule=\"evenodd\"\r\n                                  clip-rule=\"evenodd\"\r\n                                  baseProfile=\"basic\"\r\n                                >\r\n                                  <path\r\n                                    fill=\"#e41e2f\"\r\n                                    fill-rule=\"evenodd\"\r\n                                    d=\"M16.997,18.997v2h2v2h2\tv2h2v2h2v-2h2v-2h-2v-2h-2v-2h-2v-2h-2v-2h2v-2h2v-2h2v-2h2v-2h-2v-2h-2v2h-2v2h-2v2h-2v2h-2v-2h-2v-2h-2v-2h-2v-2h-2v2h-2v2h2v2h2\tv2h2v2h2v2h-2v2h-2v2h-2v2h-2v2h2v2h2v-2h2v-2h2v-2h2v-2H16.997z\"\r\n                                    clip-rule=\"evenodd\"\r\n                                  />\r\n                                </svg>\r\n                              </button>\r\n                            )}\r\n                            Last Upload: &nbsp;\r\n                            <button\r\n                              onClick={() => {\r\n                                const id = types[0].con_DF;\r\n                                handleFetchFile(id);\r\n                              }}\r\n                              className=\"text-blue-700 underline\"\r\n                            >\r\n                              {types[0].con_DF}\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* approval matrix */}\r\n            <div className=\"flex-col bg-blue-50 rounded-xl\">\r\n              <div className=\"bg-blue-300 px-2 justify-start rounded-t-xl text-xl font-bold\">\r\n                Approval Matrix\r\n              </div>\r\n              {(mode === \"A\" || mode === \"N\" || mode === \"R\") && (\r\n                <>\r\n                  <div className=\"w-full md:flex mb-2 mt-4\">\r\n                    <div className=\"md:w-1/6\">\r\n                      <label\r\n                        htmlFor=\"proposer\"\r\n                        className=\"ml-2 text-black font-small\"\r\n                      >\r\n                        Proposer<span className=\"text-red-500\">*</span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"md:w-3/6 flex items-start\">\r\n                      <div className=\"md:w-1/2 text-sm\">Buyer</div>\r\n                      <div className=\"md:w-1/2\">\r\n                        <Autocomplete\r\n                          {...defaultEmployeesP}\r\n                          id=\"proposer\"\r\n                          disableClearable\r\n                          value={{\r\n                            EMPLOYEE: approverMat.proposer,\r\n                            EMAIL: approverMat.PEmail,\r\n                          }}\r\n                          onChange={(event, value) => {\r\n                            handleApprovalMat(\r\n                              \"proposer\",\r\n                              value.EMPLOYEE,\r\n                              \"Buyer\",\r\n                              value.EMAIL\r\n                            );\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              variant=\"standard\"\r\n                              fullWidth\r\n                              required\r\n                              style={{ width: \"220px\" }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"md:w-2/6 italic text-sm\">\r\n                      {appArcDet?.map((appArc, appArcIndex) => (\r\n                        <div\r\n                          key={appArcIndex}\r\n                          className=\"md:w-full flex items-start bg-transparent text-black text-xs\"\r\n                        >\r\n                          {appArc.cam_role === \"Proposer\" && (\r\n                            <>\r\n                              <div className=\"md:w-3/12\">\r\n                                Version: {appArc.cam_app_version}\r\n                              </div>\r\n                              <div className=\"md:w-6/12 max-h-10 overflow-y-auto break-words\">\r\n                                Remarks: {appArc.cam_app_remarks}\r\n                              </div>\r\n                              <div className=\"md:w-3/12\">\r\n                                {appArc.cam_app_status ? (\r\n                                  <span>Approved</span>\r\n                                ) : (\r\n                                  <span>Returned</span>\r\n                                )}\r\n                              </div>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {deviationsLabel === \"Y\" && ltaAfterImp && (\r\n                    <div className=\"w-full md:flex mb-2 mt-4\">\r\n                      <div className=\"md:w-1/6\">\r\n                        <label\r\n                          htmlFor=\"addproposer\"\r\n                          className=\"ml-2 text-black font-small\"\r\n                        >\r\n                          Additional Proposer\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"md:w-3/6 flex items-start\">\r\n                        <div className=\"md:w-1/2 text-sm\">IL3 (Commercial)</div>\r\n                        <div className=\"md:w-1/2\">\r\n                          <Autocomplete\r\n                            {...defaultEmployeesAP}\r\n                            id=\"addproposer\"\r\n                            disableClearable\r\n                            value={{\r\n                              EMPLOYEE: approverMat.addproposer,\r\n                              EMAIL: approverMat.APEmail,\r\n                            }}\r\n                            onChange={(event, value) =>\r\n                              handleApprovalMat(\r\n                                \"addproposer\",\r\n                                value.EMPLOYEE,\r\n                                \"IL3 (Commercial)\",\r\n                                value.EMAIL\r\n                              )\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                style={{ width: \"220px\" }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"md:w-2/6 italic text-sm\">\r\n                        {appArcDet?.map((appArc, appArcIndex) => (\r\n                          <div\r\n                            key={appArcIndex}\r\n                            className=\"md:w-full flex items-start bg-transparent text-black text-xs\"\r\n                          >\r\n                            {appArc.cam_role === \"Additional Proposer\" && (\r\n                              <>\r\n                                <div className=\"md:w-3/12\">\r\n                                  Version: {appArc.cam_app_version}\r\n                                </div>\r\n                                <div className=\"md:w-6/12 max-h-10 overflow-y-auto break-words\">\r\n                                  Remarks: {appArc.cam_app_remarks}\r\n                                </div>\r\n                                <div className=\"md:w-3/12\">\r\n                                  {appArc.cam_app_status ? (\r\n                                    <span>Approved</span>\r\n                                  ) : (\r\n                                    <span>Returned</span>\r\n                                  )}\r\n                                </div>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {deviationsLabel === \"Y\" && (\r\n                    <div className=\"w-full md:flex mb-2 mt-4\">\r\n                      <div className=\"md:w-1/6\">\r\n                        <label\r\n                          htmlFor=\"verifier\"\r\n                          className=\"ml-2 text-black font-small\"\r\n                        >\r\n                          Verifier<span className=\"text-red-500\">*</span>\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"md:w-3/6 flex items-start\">\r\n                        <div className=\"md:w-1/2 text-sm\">\r\n                          IL4/IL3 Contract Management\r\n                        </div>\r\n                        <div className=\"md:w-1/2\">\r\n                          <Autocomplete\r\n                            {...defaultEmployeesV}\r\n                            id=\"verifier\"\r\n                            disableClearable\r\n                            value={{\r\n                              EMPLOYEE: approverMat.verifier,\r\n                              EMAIL: approverMat.VEmail,\r\n                            }}\r\n                            onChange={(event, value) =>\r\n                              handleApprovalMat(\r\n                                \"verifier\",\r\n                                value.EMPLOYEE,\r\n                                \"IL4/IL3 Contract Management\",\r\n                                value.EMAIL\r\n                              )\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                required\r\n                                style={{ width: \"220px\" }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"md:w-2/6 italic text-sm\">\r\n                        {appArcDet?.map((appArc, appArcIndex) => (\r\n                          <div\r\n                            key={appArcIndex}\r\n                            className=\"md:w-full flex items-start bg-transparent text-black text-xs\"\r\n                          >\r\n                            {appArc.cam_role === \"Verifier\" && (\r\n                              <>\r\n                                <div className=\"md:w-3/12\">\r\n                                  Version: {appArc.cam_app_version}\r\n                                </div>\r\n                                <div className=\"md:w-6/12 max-h-10 overflow-y-auto break-words\">\r\n                                  Remarks: {appArc.cam_app_remarks}\r\n                                </div>\r\n                                <div className=\"md:w-3/12\">\r\n                                  {appArc.cam_app_status ? (\r\n                                    <span>Approved</span>\r\n                                  ) : (\r\n                                    <span>Returned</span>\r\n                                  )}\r\n                                </div>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {deviationsLabel === \"Y\" && ltaAfterImp && (\r\n                    <div className=\"w-full md:flex mb-2 mt-4\">\r\n                      <div className=\"md:w-1/6\">\r\n                        <label\r\n                          htmlFor=\"recommender1\"\r\n                          className=\"ml-2 text-black font-small\"\r\n                        >\r\n                          Recommender #1<span className=\"text-red-500\">*</span>\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"md:w-3/6 flex items-start\">\r\n                        <div className=\"md:w-1/2 text-sm\">\r\n                          IL2/IL3 directly reporting to Chief Commercial (E&P)\r\n                        </div>\r\n                        <div className=\"md:w-1/2\">\r\n                          <Autocomplete\r\n                            {...defaultEmployeesR1}\r\n                            id=\"recommender1\"\r\n                            disableClearable\r\n                            value={{\r\n                              EMPLOYEE: approverMat.recommender1,\r\n                              EMAIL: approverMat.R1Email,\r\n                            }}\r\n                            onChange={(event, value) =>\r\n                              handleApprovalMat(\r\n                                \"recommender1\",\r\n                                value.EMPLOYEE,\r\n                                \"IL2/IL3 directly reporting to Chief Commercial (E&P)\",\r\n                                value.EMAIL\r\n                              )\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                required\r\n                                style={{ width: \"220px\" }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"md:w-2/6 italic text-sm\">\r\n                        {appArcDet?.map((appArc, appArcIndex) => (\r\n                          <div\r\n                            key={appArcIndex}\r\n                            className=\"md:w-full flex items-start bg-transparent text-black text-xs\"\r\n                          >\r\n                            {appArc.cam_role === \"Recommender #1\" && (\r\n                              <>\r\n                                <div className=\"md:w-3/12\">\r\n                                  Version: {appArc.cam_app_version}\r\n                                </div>\r\n                                <div className=\"md:w-6/12 max-h-10 overflow-y-auto break-words\">\r\n                                  Remarks: {appArc.cam_app_remarks}\r\n                                </div>\r\n                                <div className=\"md:w-3/12\">\r\n                                  {appArc.cam_app_status ? (\r\n                                    <span>Approved</span>\r\n                                  ) : (\r\n                                    <span>Returned</span>\r\n                                  )}\r\n                                </div>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {deviationsLabel === \"Y\" && ltaAfterImp && (\r\n                    <div className=\"w-full md:flex mb-2 mt-4\">\r\n                      <div className=\"md:w-1/6\">\r\n                        <label\r\n                          htmlFor=\"recommender2\"\r\n                          className=\"ml-2 text-black font-small\"\r\n                        >\r\n                          Recommender #2<span className=\"text-red-500\">*</span>\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"md:w-3/6 flex items-start\">\r\n                        <div className=\"md:w-1/2 text-sm\">\r\n                          Chief Contract Management\r\n                        </div>\r\n                        <div className=\"md:w-1/2\">\r\n                          <Autocomplete\r\n                            {...defaultEmployeesR2}\r\n                            id=\"recommender2\"\r\n                            disableClearable\r\n                            value={{\r\n                              EMPLOYEE: approverMat.recommender2,\r\n                              EMAIL: approverMat.R2Email,\r\n                            }}\r\n                            onChange={(event, value) =>\r\n                              handleApprovalMat(\r\n                                \"recommender2\",\r\n                                value.EMPLOYEE,\r\n                                \"Chief Contract Management\",\r\n                                value.EMAIL\r\n                              )\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                required\r\n                                style={{ width: \"220px\" }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"md:w-2/6 italic text-sm\">\r\n                        {appArcDet?.map((appArc, appArcIndex) => (\r\n                          <div\r\n                            key={appArcIndex}\r\n                            className=\"md:w-full flex items-start bg-transparent text-black text-xs\"\r\n                          >\r\n                            {appArc.cam_role === \"Recommender #2\" && (\r\n                              <>\r\n                                <div className=\"md:w-3/12\">\r\n                                  Version: {appArc.cam_app_version}\r\n                                </div>\r\n                                <div className=\"md:w-6/12 max-h-10 overflow-y-auto break-words\">\r\n                                  Remarks: {appArc.cam_app_remarks}\r\n                                </div>\r\n                                <div className=\"md:w-3/12\">\r\n                                  {appArc.cam_app_status ? (\r\n                                    <span>Approved</span>\r\n                                  ) : (\r\n                                    <span>Returned</span>\r\n                                  )}\r\n                                </div>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {deviationsLabel === \"Y\" && ltaAfterImp && (\r\n                    <div className=\"w-full md:flex mb-2 mt-4\">\r\n                      <div className=\"md:w-1/6\">\r\n                        <label\r\n                          htmlFor=\"approver\"\r\n                          className=\"ml-2 text-black font-small\"\r\n                        >\r\n                          Approver<span className=\"text-red-500\">*</span>\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"md:w-3/6 flex items-start\">\r\n                        <div className=\"md:w-1/2 text-sm\">Chief Commercial</div>\r\n                        <div className=\"md:w-1/2\">\r\n                          <Autocomplete\r\n                            {...defaultEmployeesA}\r\n                            id=\"approver\"\r\n                            disableClearable\r\n                            value={{\r\n                              EMPLOYEE: approverMat.approver,\r\n                              EMAIL: approverMat.AEmail,\r\n                            }}\r\n                            onChange={(event, value) =>\r\n                              handleApprovalMat(\r\n                                \"approver\",\r\n                                value.EMPLOYEE,\r\n                                \"Chief Commercial\",\r\n                                value.EMAIL\r\n                              )\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                required\r\n                                style={{ width: \"220px\" }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"md:w-2/6 italic text-sm\">\r\n                        {appArcDet?.map((appArc, appArcIndex) => (\r\n                          <div\r\n                            key={appArcIndex}\r\n                            className=\"md:w-full flex items-start bg-transparent text-black text-xs\"\r\n                          >\r\n                            {appArc.cam_role === \"Approver\" && (\r\n                              <>\r\n                                <div className=\"md:w-3/12\">\r\n                                  Version: {appArc.cam_app_version}\r\n                                </div>\r\n                                <div className=\"md:w-6/12 max-h-10 overflow-y-auto break-words\">\r\n                                  Remarks: {appArc.cam_app_remarks}\r\n                                </div>\r\n                                <div className=\"md:w-3/12\">\r\n                                  {appArc.cam_app_status ? (\r\n                                    <div>Approved</div>\r\n                                  ) : (\r\n                                    <div>Returned</div>\r\n                                  )}\r\n                                </div>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {deviationsLabel === \"N\" && (\r\n                    <div className=\"w-full md:flex mb-2 mt-4\">\r\n                      <div className=\"md:w-1/6\">\r\n                        <label\r\n                          htmlFor=\"approver\"\r\n                          className=\"ml-2 text-black font-small\"\r\n                        >\r\n                          Approver<span className=\"text-red-500\">*</span>\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"md:w-3/6 flex items-start\">\r\n                        <div className=\"md:w-1/2 text-sm\">IL3 (Commercial)</div>\r\n                        <div className=\"md:w-1/2\">\r\n                          <Autocomplete\r\n                            {...defaultEmployeesANd}\r\n                            id=\"approver\"\r\n                            disableClearable\r\n                            value={{\r\n                              EMPLOYEE: approverMat.approver,\r\n                              EMAIL: approverMat.AEmail,\r\n                            }}\r\n                            onChange={(event, value) =>\r\n                              handleApprovalMat(\r\n                                \"approver\",\r\n                                value.EMPLOYEE,\r\n                                \"IL3 (Commercial)\",\r\n                                value.EMAIL\r\n                              )\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                required\r\n                                style={{ width: \"220px\" }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"md:w-2/6 italic text-sm\">\r\n                        {appArcDet?.map((appArc, appArcIndex) => (\r\n                          <div\r\n                            key={appArcIndex}\r\n                            className=\"md:w-full flex items-start bg-transparent text-black text-xs\"\r\n                          >\r\n                            {appArc.cam_role === \"Approver\" && (\r\n                              <>\r\n                                <div className=\"md:w-3/12\">\r\n                                  Version: {appArc.cam_app_version}\r\n                                </div>\r\n                                <div className=\"md:w-6/12 max-h-10 overflow-y-auto break-words\">\r\n                                  Remarks: {appArc.cam_app_remarks}\r\n                                </div>\r\n                                <div className=\"md:w-3/12\">\r\n                                  {appArc.cam_app_status ? (\r\n                                    <div>Approved</div>\r\n                                  ) : (\r\n                                    <div>Returned</div>\r\n                                  )}\r\n                                </div>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {deviationsLabel === \"Y\" && ltaAfterImp == false && (\r\n                    <div className=\"w-full md:flex mb-2 mt-4\">\r\n                      <div className=\"md:w-1/6\">\r\n                        <label\r\n                          htmlFor=\"approver\"\r\n                          className=\"ml-2 text-black font-small\"\r\n                        >\r\n                          Approver<span className=\"text-red-500\">*</span>\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"md:w-3/6 flex items-start\">\r\n                        <div className=\"md:w-1/2 text-sm\">IL2 (Commercial)</div>\r\n                        <div className=\"md:w-1/2\">\r\n                          <Autocomplete\r\n                            {...defaultEmployeesA}\r\n                            id=\"approver\"\r\n                            disableClearable\r\n                            value={{\r\n                              EMPLOYEE: approverMat.approver,\r\n                              EMAIL: approverMat.AEmail,\r\n                            }}\r\n                            onChange={(event, value) =>\r\n                              handleApprovalMat(\r\n                                \"approver\",\r\n                                value.EMPLOYEE,\r\n                                \"IL2 (Commercial)\",\r\n                                value.EMAIL\r\n                              )\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                required\r\n                                style={{ width: \"220px\" }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"md:w-2/6 italic text-sm\">\r\n                        {appArcDet?.map((appArc, appArcIndex) => (\r\n                          <div\r\n                            key={appArcIndex}\r\n                            className=\"md:w-full flex items-start bg-transparent text-black text-xs\"\r\n                          >\r\n                            {appArc.cam_role === \"Approver\" && (\r\n                              <>\r\n                                <div className=\"md:w-3/12\">\r\n                                  Version: {appArc.cam_app_version}\r\n                                </div>\r\n                                <div className=\"md:w-6/12 max-h-10 overflow-y-auto break-words\">\r\n                                  Remarks: {appArc.cam_app_remarks}\r\n                                </div>\r\n                                <div className=\"md:w-3/12\">\r\n                                  {appArc.cam_app_status ? (\r\n                                    <div>Approved</div>\r\n                                  ) : (\r\n                                    <div>Returned</div>\r\n                                  )}\r\n                                </div>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            {(mode === \"N\" || mode === \"A\" || mode === \"R\") && (\r\n              <div className=\"bg-transparent flex justify-end space-x-8 p-4\">\r\n                <button\r\n                  className=\"bg-green-500 hover:bg-green-600 active:bg-green-700 text-white font-bold py-2 px-4 rounded shadow-lg transform hover:-translate-y-1 hover:shadow-xl active:translate-y-0.5\"\r\n                  onClick={() => setOpen(true)}\r\n                >\r\n                  Submit\r\n                </button>\r\n                <button className=\"bg-red-500 hover:bg-red-600 active:bg-red-700 text-white font-bold py-2 px-4 rounded shadow-lg transform hover:-translate-y-1 hover:shadow-xl active:translate-y-0.5\">\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            <Dialog\r\n              open={open}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">Confirmation</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  {mode === \"R\"\r\n                    ? `Note: The attachments section not selected will be continued with previous ones and the attachment uploaded will replace previous one.`\r\n                    : \"\"}\r\n                  Do you wish to submit?\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleSubmit}>Yes</Button>\r\n                <Button onClick={() => setOpen(false)} autoFocus>\r\n                  No\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LTC;\r\n"],"names":["AlertDialog","_ref","Mode","Head","Warn","open","setOpen","React","_jsx","children","_jsxs","Dialog","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","handleClose","handleNo","window","location","reload","autoFocus","load","setLoad","useState","name","setName","email","setEmail","ADID","JSON","parse","sessionStorage","getItem","currentDay","Date","getDate","currentMonth","getMonth","currentYear","getFullYear","currentDate","concat","vendorCodes","setVendorCodes","vendorSelect","setVendorSelect","vendorName","setVendorName","vendorAddress","setVendorAddress","vendorEmail","setVendorEmail","vendorMobile","setVendorMobile","conCategory","setConCategory","mode","setMode","warn","setWarn","head","setHead","types","setTypes","prevTypes","setPrevTypes","message","setMessage","yearsSelect","setYearsSelect","monthsSelect","setMonthsSelect","implementationDate","ltaAfterImp","setLtaAfterImp","prevLtaAfterImp","setPrevLtaAfterImp","selectedLtc","setSelectedLtc","arcContractDetails","setArcContractDetails","scope","setScope","intro","setIntro","deviationsLabel","setDeviationsLabel","prevDeviationsLabel","setPrevDeviationsLabel","ltcVersion","setLtcVersion","ready","setReady","chkList","setChkList","otc","setOtc","osc","setOsc","deviationsFiles","setDeviationsFiles","disableDeviationsFiles","setDisableDeviationsFiles","vendorSignedFiles","setVendorSignedFiles","disableVendorSignedFiles","setDisableVendorSignedFiles","vendorSharedFiles","setVendorSharedFiles","disableVendorSharedFiles","setDisableVendorSharedFiles","appDet","setAppDet","appArcDet","setAppArcDet","employeesP","setEmployeesP","employeesAP","setEmployeesAP","employeesV","setEmployeesV","employeesR1","setEmployeesR1","employeesR2","setEmployeesR2","employeesA","setEmployeesA","employeesANd","setEmployeesANd","approverMat","setApproverMat","proposer","proposerRole","PEmail","addproposer","addproposerRole","APEmail","verifier","verifierRole","VEmail","recommender1","recommender1Role","R1Email","recommender2","recommender2Role","R2Email","approver","approverRole","AEmail","sucFlag","setSucFlag","sucVsFFlag","setSucVsFFlag","vsFFlag","setVsFFlag","sucVsgFFlag","setSucVsgFFlag","vsgFFlag","setVsgFFlag","sucDFFlag","setSucDFFlag","dFFlag","setDFFlag","toastMessage","setToastMessage","errors","setErrors","checkChkListFlags","setCheckChkListFlags","toastId","formatDate","dateString","toString","substring","useEffect","async","response","axios","post","process","data","USERNAME","EMAIL","error","console","fetchUser","get","fetchVendorCodes","defaultProps","options","getOptionLabel","option","INV_VENDOR_CODE","rowsUri","Category","VCode","length","checked","cc_con_sub_cat","cc_flag","cc_con_t_years","cc_con_t_months","cc_con_s_date","cc_con_e_date","log","fetchTypes","handleInputChange","rowIndex","type","value","newRows","autoResize","event","target","style","height","scrollHeight","_types$7","_types$8","_types$9","_types$10","_types$11","_types$12","_types$13","_types$14","_types$15","_types$16","_types$","_types$2","_types$4","con_status","_types$3","con_modify_by","_types$5","_types$6","responseArcConDet","ContractId","cc_con_id","fetchArcContract","updateChildParams","con_ltaAfImp","con_version","con_l_dev_flag","con_intro","con_scope","con_otc","con_osc","assignReady","obj","ConId","undefined","fetchChkList","handleChkInputChange","checkForChildRow","lv1","responseAppDet","fetchAppDet","fetchAppArcDet","forEach","cam_role","prevState","cam_approver","cam_app_role","cam_app_email","fetchEmployeesP","level1","level2","fetchEmployeesV","fetchEmployeesR1","fetchEmployeesR2","fetchEmployeesA","fetchEmployeesANd","defaultEmployeesP","EMPLOYEE","defaultEmployeesAP","defaultEmployeesV","defaultEmployeesR1","defaultEmployeesR2","defaultEmployeesA","defaultEmployeesANd","handleApprovalMat","role","mail","zipFiles","zip","JSZip","Array","from","files","file","index","generateAsync","zipVsFiles","zipVsgFiles","zipDFile","readerVsF","FileReader","readAsDataURL","onload","base64VsFile","result","split","responseVs","VendorCode","Version","uid","fileName","status","readerVsgF","base64VsgFile","responseVsg","readerDF","base64DFile","responseDf","uploadAttachments","toast","success","to","subCatString","PASS","TO","SUB","TXT","_types$17","_types$18","_types$19","_types$20","_types$21","response1","con_modify_date","response2","con_modify_email","_arcContractDetails$","_arcContractDetails$2","_arcContractDetails$3","setTimeout","sendEmail","handleFetchFile","responseType","url","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","isActive","current","info","_Fragment","Loader","ToastContainer","position","className","htmlFor","class","Autocomplete","disableClearable","onChange","renderInput","params","TextField","variant","fullWidth","required","width","vDetailsUrl","vCode","INV_NAME","VM_ADDRESS","inv_ven_email","INS_MOBILE_NO","placeholder","disabled","RadioGroup","row","FormControlLabel","control","Radio","label","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","color","fontWeight","textAlign","TableBody","map","_row$cc_con_s_date","_row$cc_con_e_date","Checkbox","e","max","toISOString","sDate","years","months","date","_obj","dateObj","setFullYear","setMonth","eDate","handleDates","minHeight","multiline","helperText","textWrap","lv2","Clause","edit_dev","edit","flag","remarks","na","onInput","docxFiles","filter","accept","multiple","xmlns","viewBox","baseProfile","fill","d","con_VSF","pdfFiles","con_VSgF","con_DF","appArc","appArcIndex","cam_app_version","cam_app_remarks","cam_app_status","preventDefault","tempErrors","k","sl","cl_sl","findIndex","uploadFlag","createCrUri","editCrUri","usedBy","SubCategory","CreateDate","Intro","Scope","CreateBy","CreateEmail","Deviation","LtaAfterImp","Otc","Osc","Rows","lv","Approvers","NewContractId","ModifyDate","ModifyBy","ModifyEmail","Ver"],"sourceRoot":""}